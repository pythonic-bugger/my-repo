{
  "info": {
    "_postman_id": "57f6e756-b180-4dee-8ed3-97043502a0d4",
    "name": "Elide JSON API Copy",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "player Achievement",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "{player Id} -123",
              "item": [
                {
                  "name": "New Folder",
                  "item": [],
                  "_postman_id": "3a438aae-0e9e-481c-b820-529ff73e6e75",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum kkpassages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.llkkkklllllllkkkk",
                          "",
                          "// Why do we use it?kkk",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "0c557567-fe02-4ca2-bd16-ecc262947388"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "///jhjbhb"
                        ],
                        "type": "text/javascript",
                        "id": "0062d275-07c2-4759-a851-bf5c418db2db"
                      }
                    }
                  ],
                  "_postman_id": "54b3f339-354a-44f5-8b74-2679d7aee013",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "5126d5a5-f122-44cc-b3f1-ed6eac38a5a0",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "a7a0a4b7-eedc-4fa5-b128-f31aad292936",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "95bb6b8d-2cf0-445f-bd03-3dd065f21cc6",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"Testing\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    },
                    {
                      "id": "ee2b6c0a-0c74-4e1f-b28a-945d5a853540",
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier"
                            },
                            {
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier"
                            }
                          ]
                        }
                      },
                      "_postman_previewlanguage": "Text",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "<testingjhjh>"
                    },
                    {
                      "id": "f74e0065-2827-4fcb-bde8-1a89e325064f",
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier"
                            },
                            {
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier"
                            }
                          ]
                        }
                      },
                      "_postman_previewlanguage": "Text",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId Copy",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.lll",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "69e91dcb-b4ec-44de-83ee-f3343d5c1da8"
                      }
                    }
                  ],
                  "_postman_id": "c4f84495-982f-4f9f-a5dc-1ecdbd6c27c3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "7e9c46c4-77e3-48c7-b7cb-a73d72aff7f4",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "7aef9828-dc43-4ae1-8457-87bbef4528ff",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "c6cfd027-1f8f-4c74-afc9-dd8f7f15c217",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "faaecc49-f3ff-4e2c-8709-f590e35470fd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "3396dcd3-46dd-4352-99dc-3c0884a6fbe0",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "3f5dcb93-8e15-4929-8793-6c9a332b9ee3",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Deletes an instance of type player"
                  },
                  "response": [
                    {
                      "id": "5031e350-7c90-4f59-a072-c52814b857f1",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "95f963c4-cb58-43e6-8e93-650c2767652c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "7cd867b6-1e51-4902-8b1d-32cc04218487",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "a56298e8-7d3f-47e9-9e01-448d474e3724",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Modifies an instance of type player"
                  },
                  "response": [
                    {
                      "id": "f39c8287-c3f2-4f67-8e51-2864b7c46fc2",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "New Request-123",
                  "_postman_id": "abb3aaff-9f2e-49c2-af25-882830f456da",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_id": "8df814ae-6306-4d2f-a3f4-5a9969a0a964",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "id": "c2d690ea-0f01-4f2c-892b-2bf785d01d99"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "id": "f8f6e707-ef6b-4e8e-afd0-7f103d9eca6a"
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "player",
              "item": [
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "//"
                        ],
                        "type": "text/javascript",
                        "id": "9e6349a2-6540-4b50-8b4b-d1e29ddef1a3"
                      }
                    }
                  ],
                  "_postman_id": "59ea6419-5bc1-46bc-be90-475355bd4807",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "87fca2d0-74bf-4614-9cd2-4807dd77041b",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "161d8a42-df2f-4afc-92d4-495ef7e1fce3",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "d091b68e-fa41-4120-9942-c66631832512",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "259fff75-8bee-4dc2-995d-ad07a824b8db",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "d8ae1299-e9e0-4fb2-9a13-1c74dbc0b84c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "50c59c05-db16-474d-a20a-797023dda61d",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "id": "e4dc6afc-f367-4066-ac2e-df3bc2e73426"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// hjjhbhbmnb"
                    ],
                    "id": "9ad43231-8f62-4be7-9e39-902b9f488377"
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "0b9f0d17-474f-4208-b438-54f3a316b82b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "a8f62a05-4c4e-4fdc-bc82-37d7fa2aaf27",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "a3badb29-5fbe-40d1-8b0b-e3cf4b5f6b3c",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "1d2ba980-f6c0-4a33-bea8-6c729f8dbbcf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "4c90acf7-20f5-4f54-8c51-fcd93c74f72d",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "210df29f-cb43-4d55-92e2-dc05044bdd44",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "692f31d3-2977-49a1-b8d8-b3eab16e93fa",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "/**",
                          " * scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived nothas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with ake a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passage only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          " */"
                        ],
                        "id": "25397dfd-d8c7-4c90-841b-8c9c16e1eaae"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "/**",
                          " * has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passagehas survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with urvived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popuIpsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanlllged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passage",
                          " */"
                        ],
                        "id": "14173972-5cf2-4b9f-9d6d-f3337ab49d5e"
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "b4a882e4-5561-4e67-b751-79b5de4f1984",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "dc9079a9-d52f-4806-bbe4-b0c19f99f5a3",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "d6d8eeac-0061-4609-a8d8-5f042a21b808",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "ff7e56bc-7775-48aa-a35e-5a071b179ea3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "d25b212b-3dd1-49f5-a019-f77823c44d24",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "5de76f73-fdca-4291-8603-8f838e6e07d4",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "a0a857d1-fe84-4959-a6e1-789f492897ab",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "58b39f08-f114-4ec5-a7c4-f75f5664a136",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "265911b4-1198-46a7-88bb-b70aa445cb80",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "0d72404f-9c2e-40f8-a062-c860bfbd9a03",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "5d00628d-03a6-4024-bc8e-fff78409e79f",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "6720a6b1-9713-4864-8a5d-a36701cc7e0a",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "987c5bb8-9102-456d-a8e9-ab65012220a0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "af00256d-ea29-48cf-93a4-6853d4bea47f",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "531b06ec-c4aa-494c-b896-49704ae4ce41",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "a053df62-7f1d-4b30-9763-ce0e764a5518",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "44f1cd1c-0ba9-4f8c-a00f-cd718376e904",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "6d5087d6-a042-4951-a7cd-8e419ba37812",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "129ae945-6c8d-46db-9f95-2398f4e57f4a",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "abebff6c-def4-491c-b906-19e7f11eb820",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "bcefb843-1d3e-4a8a-941d-d4e5a3ff413b",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "5e8e194e-73db-4626-bc5b-d2e172c8099c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f1e439ea-7307-4e10-bda7-10e6c4397c72",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "950bb843-a39e-4f16-8730-02810839f1c0",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "49eb0655-9c7b-425a-b6cd-909170fdb24a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "4d7d9c24-ac00-4c14-8085-ee1e2813f2e3",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "6a4628ff-b25f-4030-bf69-4c142ef87126",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "62287c5b-4c2d-4245-addb-b9a2ccfd03d5",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "3358637a-a284-4618-812f-5bd6c1f40a40",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "e308cc20-654b-450a-a2e7-c77cc447c5d5",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "202c35bb-9e31-43df-9525-4747368882ce",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "5f7407fc-1e8e-405c-9c15-d3656670fb04",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "ce775917-f246-44bd-878c-70c26d97123d",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "81531a00-4302-4de6-b03a-a4e0fdb73a48",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "bcd06bc1-6c10-465a-8e85-fd615c3475fd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "ed86c620-1226-4b24-af38-29afdf6102e3",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "d35c8dba-20d5-44bb-8d75-fbdb90cb7962",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "b014b937-7278-4d82-b217-00a164a1f7be",
          "_postman_isSubFolder": true
        },
        {
          "name": "{player Achievement Id} Copy",
          "item": [
            {
              "name": "{player Id} -123",
              "item": [
                {
                  "name": "New Folder",
                  "item": [],
                  "_postman_id": "ed803698-882c-44cb-bb55-35824aaf8cae",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum kkpassages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.llkkkklllllllkkkk",
                          "",
                          "// Why do we use it?kkk",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "1a0d4e76-4a41-45d2-b353-96fd5e8cca48"
                      }
                    }
                  ],
                  "_postman_id": "9077c055-b68e-4e47-8195-5c67a21e6feb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "9b8ef325-0361-4f53-83d4-4fcc8dec6b60",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "bda2b093-c904-4d81-a74d-a87f45759ab1",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "07825ce4-569e-441e-b9c9-dd2de4e2bbe3",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId Copy",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.lll",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "f463376f-6848-4da7-9a19-3d8efee3a3e6"
                      }
                    }
                  ],
                  "_postman_id": "953fef15-e2c4-4498-a73b-ecb083527e28",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "d0ede2cc-a263-41e5-8e64-df203afaebf0",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "6111d32a-a675-4b2c-a224-19ce80599ae3",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "c750ae35-3496-47f6-9c57-d7051f5a50fd",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "17b5ad26-33f6-431e-913f-6da33f685583",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "28e5b9a1-a161-441f-a98c-3d5ed0a87535",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "22d2e037-940f-4365-b1ec-bef34c4cd87e",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Deletes an instance of type player"
                  },
                  "response": [
                    {
                      "id": "a9610360-b558-4507-a412-a24718b36902",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "ff75b0d7-c4f8-4c5f-9a94-e996315253a6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "b2782c08-6873-4dce-a186-645d80481283",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "d988c778-601b-4d2a-b17e-f9d71fc988d9",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Modifies an instance of type player"
                  },
                  "response": [
                    {
                      "id": "97b878d1-9bcd-44b1-b242-677dbe76688c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "New Request-123",
                  "_postman_id": "9a63115d-878a-4672-88d8-7e460abc8118",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_id": "c3034dec-b403-484f-bba1-e04a41a76341",
              "_postman_isSubFolder": true
            },
            {
              "name": "player",
              "item": [
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "b4e9e23c-fe5a-428f-9b5d-021774ef102d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "895bb5ba-7754-4704-bb9b-fa344fd68db6",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "f743305a-d6ff-444b-9ce7-109581619c3c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "ef5e0bfe-ba23-475f-8a38-910600989792",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "1992e4bc-c017-4092-bfd4-494f9e754557",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "1a6db25a-0e88-467e-b6c6-4b6cd1a021b5",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "585aeec9-0bae-4aa5-9cad-b641116ef5c7",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "eebe4fd0-f888-4b18-ad97-9d911a1b1389",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "c8856b73-bf5b-4aee-a869-7cd51e90ba5e",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "c46f1d46-e19a-479a-b93c-2e7a2042b7b4",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "6d30a8f1-a297-43d2-adc6-0be33cf90bfd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "790bddd9-8066-4436-9448-50afaa06370f",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "842f3a5b-2820-438c-8187-bd0f36700cea",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "2eb19af9-5027-422a-871d-6fa5a99ed87a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "ccf2fd21-599d-4934-a80b-fe8acee9c8ac",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "ba99963f-226e-4965-9c2c-d84996167ffe",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "538699d7-1323-459d-91ff-b8766ce04f75",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "39d6a396-8107-4069-b37d-8cacd1ab0c14",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "4c023515-b934-42b1-b8ec-4a7ad6bc32f6",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "9bd83712-56ff-4e91-a1c8-12fe7250181d",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "be749bd9-276c-4ef6-830f-b41649e579c1",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "1f6bb2ab-8ab1-4d6f-9748-79550120ef51",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "a3257391-a95f-45e3-96f5-d31f6c186250",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "cbc442f5-845d-41e6-8800-16ba806ce325",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "e134b567-9588-4c55-a21c-d0230be252fe",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "e6ed240f-88ff-4b5a-ade1-4bf46592f54b",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "be2586db-d8d7-41e1-8396-522be4591586",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "1ed5911c-ac6c-4712-bb6e-72cf6d7408ed",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "af576a0f-2384-4b82-ae23-88995a33d04b",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "2bf38f5c-7963-414d-8117-90da540ca8ba",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "fdcd8d61-327b-4b87-bb49-e7dffc6838e0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "2b820083-e15f-4cf0-b71c-584d07bb3ba4",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "c006d063-2a87-49d3-ab34-976f8f4a95ac",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "9ff72c09-ec22-4efa-9305-3e309f2f5300",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "532ff809-8255-4a4d-99bd-c49871f275b0",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "c4de36f4-12f5-40da-83e7-95041e283f0c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "074b0cc7-c0d9-42e6-8cf5-0e4fd7ab1d5e",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "57d2abfd-6bc3-4da8-8acb-2e23bcb17e18",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "7bac4858-3b35-4a7e-8009-de47be33108f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "a8681de2-fd0d-467d-8629-2275690a79e4",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "b1c3755a-361e-494e-85e8-72fd02f9e514",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "85b57b9d-dc24-4148-937c-662eb8416b67",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "b1539496-d3ba-4fcb-9b9e-e440d528e1ff",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "4cabd9c4-1af2-4af3-86d4-31472e2860d5",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "7d28ae3f-88be-4cc3-8734-92ef5b403c52",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "d965bce9-9bb8-44bc-a8dc-d7bf490cd74f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "7812ad83-0e26-4995-aeac-3ed49ba252db",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "df2eec24-343a-425c-b63f-2b337f76a9d4",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "7f3c7e7b-5ee5-455c-90eb-6a7a9144c563",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "a98c4647-b6ce-4dd9-83c3-d3672f2bd987",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "a63fd01f-3594-46bb-9704-bf36e3499497",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "0c60c3a7-ce48-4ff4-9589-a71602552e95",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// adding request update jj"
                ],
                "type": "text/javascript",
                "id": "2e646342-558c-4d2f-ac01-3aa2086b5c08"
              }
            }
          ],
          "_postman_id": "3e6b4b2d-cde4-4a8e-84ef-7423af56225d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "8ffff8db-206a-4eb7-ac06-bc37ccec0760",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "23496dc1-5a6b-466a-8fec-1f0e9cd478f9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "20c12917-b8b3-4dc4-85e0-8bf9eb916c01",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<datekkkkTikjkjme>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "fd863bf7-069e-4914-a82b-5f3b6cd746ac"
              }
            }
          ],
          "_postman_id": "73e91ba2-ff3b-46e8-b58c-15ceeaacaed5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "9907339a-3591-4ac0-aafc-7bc4063f4261",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "d40c77d5-3fb9-48e1-9105-af08b010e6ea",
            "type": "text/javascript",
            "exec": [
              "/**",
              " * SAIALEKHYA 12343",
              " * ",
              " * It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact tjhjhhat a reader will be distracted by the readable contentghghhghgh of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a lonhgg established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has atent here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a lonhgg established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable cont, sometimesIt is a lonhgg established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when lookinghjhjjhjhjhjh at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader  Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sas opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sas opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sas opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. MLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yeLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look likLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal disthjhjkhjhjribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page ontent here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default modelkjhkjh text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look likhghjgjhe readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yeLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look likLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be djjjistracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearse readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishingLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsars, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsbe distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsany desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsmodel text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the yearsLorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimesIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes",
              " */"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4186fb54-836c-4271-beb0-eaaac9bb54d3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "player Achievement Copy",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "{player Id} -123",
              "item": [
                {
                  "name": "New Folder",
                  "item": [],
                  "_postman_id": "1329a145-d18f-460c-adf8-9fe3a759f326",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum kkpassages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.llkkkklllllllkkkk",
                          "",
                          "// Why do we use it?kkk",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "12e66c8d-791c-498a-a00c-fa9dfe0c3430"
                      }
                    }
                  ],
                  "_postman_id": "bce43795-4b38-45e8-86d5-de5717d76b79",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "f9a526a7-2d10-4d35-87e6-e2b04e056ff2",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "304028b8-7195-44fb-8480-7406368252f9",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "64cf9013-ca52-48bf-9205-829fc5a3de48",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId Copy",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.lll",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "2b6b5400-9e83-4f6c-b520-7a9ebe677735"
                      }
                    }
                  ],
                  "_postman_id": "50d03df6-4a06-4e10-8326-2b65538096e7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "01b80d1a-a34b-4a7b-9fa4-5e6c9e5761ac",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "e910c1dd-e60e-4c9a-af73-995c195ce950",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "e43480bb-2432-49b0-92a5-292df8740240",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "fc1294c9-9419-4224-92bd-2e9ac2e5ab73",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "419e3369-016b-4911-b02e-9f6d54d1e9c1",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "eddcceef-4800-4b77-911d-d0785ffe02b2",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Deletes an instance of type player"
                  },
                  "response": [
                    {
                      "id": "fb2ae68d-da26-4ef9-8a28-249a1fba6d94",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "de817798-abd5-440b-af10-cf7a7563ab84",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "656c714b-859b-4c9a-a632-9001f0c9d9ee",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "99cbdfe9-64f5-4a8c-9b28-9f6123bf0799",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Modifies an instance of type player"
                  },
                  "response": [
                    {
                      "id": "611f7786-2632-4442-a66d-2f133b09219c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "New Request-123",
                  "_postman_id": "dd23b8df-3e4c-4821-bf5f-130b836ce06d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_id": "639e98d2-52e3-4b6a-a2b2-7c14ca2e786a",
              "_postman_isSubFolder": true
            },
            {
              "name": "player",
              "item": [
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "eb854387-239a-44a1-b346-997bf3c23b9f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f30606d0-4709-493c-a117-4b2d2ad33bba",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "d033157c-43a5-47d8-bdf3-1bae88662d29",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "ffd12018-d5eb-4ada-ab49-2bc08313b163",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "0a89284c-8ca6-440c-872e-c68825200ef8",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "4a0b3835-78b8-41a7-9d71-18df1acaab60",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "9eb6ada0-da3a-4ff4-9cd0-2cbf4bc0a0a0",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "d69ce128-d286-4a7b-a3a5-97ed727e418f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "1a774eff-bb05-4345-a03f-4043983f08e3",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "54d7e5f4-306f-4d38-bfef-41dd00111071",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "96f46a93-1ae5-4137-81f5-e0c96ec71ab7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "bc8b6c9b-ad4b-47f6-a054-efa7e6dd55fb",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "ab7d5272-632b-4d6b-b715-c662b8921146",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "8f7e6a14-34e4-4c37-a8f9-137ad6bf158b",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "d73ad817-aac5-48c7-93e9-568f085b1bff",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "9b9fc450-dc4a-4f48-a278-202a35907185",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "fe7c61ef-01bd-497e-9b11-bebb3d0593ae",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "e8416dd8-82f8-4bd1-b13a-d002972b7ffc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "1427c6b6-3847-4f67-8f6d-497b6bfe40ec",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "dbb64b1e-6cc0-478c-9fbe-0ecf7cf4c61c",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "581a16db-db91-42f1-be46-d61c7ec648a2",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "26a33ebb-1004-41cc-b251-7efd44d14ed0",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "7b6af060-13b2-4b6d-8269-9ee150684cdd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "4d23c1a4-fb04-4389-afc5-44ff0576da7e",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "b99c8652-70bd-454e-9c50-1c462c14dc55",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "781f2562-154b-4ed4-a949-5625a9da6904",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "950f5038-b95b-49d9-8c0a-97fe3754b765",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "0ff571a8-50d4-424e-9247-ba5dab7a3306",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "ff3c55f2-a836-458a-b9f2-482d59959cf7",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "d2f0e67f-2393-480a-8644-c9a6720e1871",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "6c86e573-a9c3-4222-8cf3-527116ced102",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "fade754c-e5ab-46bc-b673-aa612d708ddc",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "4feb4df0-3aa7-42a3-a6c1-6d53ea7558ef",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "f71dcb54-6a1a-445e-9087-86ce2c6c458f",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "bdabf79f-4736-4d06-9f76-76819865e091",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "4fcb5e0a-e3df-4802-9895-28180b4a17f6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "e8b3b198-c065-41cd-88b3-0ec2b5572ce8",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "d7646e22-ed4a-4be3-a90f-4b08898dd83d",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "4425abe7-c833-4ac6-8bf6-79c945ccbdf7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "55eb4230-e860-4e3d-a106-a536ab6364a4",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "cde6760b-58c0-4248-8e6d-a48a781b9ef5",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "015f8259-1be1-411d-8c56-18e752919866",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "520ae2b5-8d04-40c2-a19a-ae36a146f060",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "88ad2d6f-7880-4729-87fc-aa63e30588b4",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "6786cf69-b5dc-40e2-b247-d34efc88ee5a",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "569b293d-a2ae-400b-9109-c31939e8764b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "70975479-7810-4654-8b81-776f81a8c988",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "f1cde6c7-89a7-4869-9005-fcd8dbc1ecfd",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "b43bb693-58f1-4991-ac1d-b80fa662e8f3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "057620bc-482e-433d-8986-0fe73a3f1752",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "dfee6dd6-5819-4685-8337-354c479b52fb",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "6de6c594-502d-469f-a474-9a1588ea0727",
          "_postman_isSubFolder": true
        },
        {
          "name": "{player Achievement Id} Copy",
          "item": [
            {
              "name": "{player Id} -123",
              "item": [
                {
                  "name": "New Folder",
                  "item": [],
                  "_postman_id": "034cc1e2-7b43-4b87-8aa0-e0d49c5f52c2",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum kkpassages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.llkkkklllllllkkkk",
                          "",
                          "// Why do we use it?kkk",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "c6b2b281-9201-4657-83a1-c7d23510e983"
                      }
                    }
                  ],
                  "_postman_id": "3b2a4341-6a29-4a3c-a4ab-a7988fcb189a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "f41343b9-5c8d-4a1d-99fc-045f2f16e578",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "edc093b1-4d9a-422b-85e9-b096e34b3a9e",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "f2a5ee32-1146-423a-a51a-16c4229035dc",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId Copy",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.lll",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          "",
                          "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                          "",
                          "// Why do we use it?",
                          "// It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
                          "",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "c78305d4-b35b-45b7-bc29-3fe3d8600235"
                      }
                    }
                  ],
                  "_postman_id": "b53aa872-1fa4-4503-9858-e50a679a8b17",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "query": [
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        }
                      ],
                      "variable": [
                        {
                          "id": "072bdc56-7eb6-4665-934a-76b7b2ebcadf",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "c82fd2ce-f1e7-470b-91a8-20c19d4882bf",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns an instance of type player"
                  },
                  "response": [
                    {
                      "id": "6d287358-1bdf-43d5-8b07-e680058ee22c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "b95f964c-5198-452e-94e8-0aafa18a8703",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "64103b5c-91c0-4eb8-93d6-bc41c0775b6f",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "22d8ae7e-7385-4094-9df4-06dce63bb8e8",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Deletes an instance of type player"
                  },
                  "response": [
                    {
                      "id": "81c2ef76-5a8b-43da-9f1f-14da94787048",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                  "_postman_id": "6725898d-73f8-4a30-853b-c67bc588d6a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player",
                        ":playerId"
                      ],
                      "variable": [
                        {
                          "id": "456ad931-3b19-4663-b226-fa04c6eb62a4",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        },
                        {
                          "id": "dda4bb40-beca-44a7-a86b-680370b5f9b9",
                          "key": "playerId",
                          "value": "<string>",
                          "description": "(Required) player Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Modifies an instance of type player"
                  },
                  "response": [
                    {
                      "id": "480a6457-3ee9-4ef5-937f-f148a5564d64",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            },
                            {
                              "key": "playerId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "New Request-123",
                  "_postman_id": "c1373a8e-7123-4ead-8cbb-5a8803fc8958",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_id": "d1c4eb10-2943-4192-b78d-94f46015e495",
              "_postman_isSubFolder": true
            },
            {
              "name": "player",
              "item": [
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "62d5c1db-d624-4637-8d5f-e60465291f44",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "4b5bf873-a6ee-47ea-b531-f3f961d67669",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "1cee4397-3556-44c6-aea6-57c515584c3e",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "f4ae22c5-b800-43c6-a1ef-b80b08fcbf2b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "d605edf9-6a05-4612-acb0-cd35d7a0fb6c",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "84ee091d-bbec-4cef-9c07-790bb9d8fa89",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "b8d225d4-9fa9-4ca2-867d-24b3586954f5",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "6b8e9eb9-b19f-43b5-85b5-39eee00ec4c4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "227aa5da-89dc-4d1e-9dac-731044500298",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "4227cfd6-2b35-4ef8-90ba-d390df042f6b",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "8be864a9-9cb2-4870-a284-4f0299b1a917",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "2b4a17f8-5bd8-4411-a026-e75787323d09",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "9a119919-9246-4c3b-b690-8e1bc407bd31",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "9aca7d27-9254-4ddd-af6e-7b16b1b59bb8",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "b7f5d841-1ba2-411a-b719-cf45c643df3f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "81b23201-0fee-4b83-b217-cf6141c8dbfe",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "0b977334-7c75-4bba-9eea-9a708190b1f2",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "e5328a6f-96a4-495e-b591-e1d3e94eb23c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "b5baae55-94f4-42e4-98ed-248cad2ce5e0",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "582e5c10-0fd6-410c-9810-b23c08b835a9",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "ac9f6128-2d23-41de-a361-dbe179fef510",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "3ae889f4-434a-415a-bc2e-478dac6a0ca7",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "f4f2d436-db8b-4302-ac58-ce9b5a730768",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "ff465a9b-6697-4ab6-a14e-3d57e4b2c34a",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "d827d4ca-8f94-4c9a-9a8d-b24cd362eaed",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "d4b30c54-ba34-4747-91f8-6dac6a6fbcea",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "ff63427e-715a-4488-92c5-415ff56d46e7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "959c60cb-e827-4c58-bba0-88486c562f9a",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "0a94ab33-fe6b-4588-a358-6269a63a3c85",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "d4dc7d42-83cd-45ca-af0e-e4813b4b2e7f",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "2f5bd11a-6e5b-4ca1-adc9-91a60e720529",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "0fff0209-b013-4072-a961-a01340d3ef73",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "b5e2bd2c-4b23-49ed-ba5e-873753f1041e",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "ebf9bc5e-13c3-44e8-a2af-eca6f6c0ed68",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "bf25dc57-9bf1-4a64-82c0-9a446b8cc14a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "5b02c535-3f2f-4449-b701-16b4d0d99978",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "53e380d5-9b5a-4375-9ca7-0903b3baf1b8",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "503e9c32-f495-4da1-a0bb-367e3feebada",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "728e6a1e-5270-4ca8-9674-79c7813fba9a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "6199992e-619b-4e53-ab95-a9c2b82e3574",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "c92596f2-0e97-4c16-92d0-553237c87a41",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "bea2b0d5-cbc9-46dd-85ef-754a15883ed2",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "5aba2eae-c120-4716-ba90-61c08cdf0a3a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "56df7c85-8034-4204-9788-897c55f65ed1",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "66d892d2-bbce-4028-af9e-cca3adbbf6bd",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "34d3809e-83c1-487b-8336-0e16e3040814",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "f4e72756-139a-4815-9b06-13288a217365",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "030c3080-7e3e-4bbe-a585-9328989cb1de",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "35769799-f410-4361-9b4b-6f60436a8637",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "81746deb-e673-432c-bf14-43083f86fca8",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "eda0e4f3-5f26-43ef-a95d-00acf6359e05",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "708d9559-83b6-49f3-89cf-07ba265705ce",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// adding request update jj"
                ],
                "type": "text/javascript",
                "id": "59eacdad-0a6c-492c-942c-b2cedca4909b"
              }
            }
          ],
          "_postman_id": "230228a6-dcf1-4574-8151-c7d1b22da4b8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "b50305ce-b7a7-4586-a271-1f844b106012",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "73d34f0c-fac9-4ab8-83ba-52206fe34313",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "2cfb6d31-bfb6-424f-afea-b7baf733580d",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "458fb2af-e6b8-497e-96d3-79ca7dccd61b"
              }
            }
          ],
          "_postman_id": "af8e57c0-a740-40f1-a7f5-1a099123da76",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "18574354-151f-4cbe-bfe0-166b9fa9ee9c"
    },
    {
      "name": "player Achievement Blah 1",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "player",
              "item": [
                {
                  "name": "{player Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "0dd42605-0da1-4bf2-9032-ad6d7d234843",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "baa39694-3353-4cb7-b4a0-e5ba53e70ec9",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "1d5c8427-7307-48d4-918d-edf1c41eeb05",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type player"
                      },
                      "response": [
                        {
                          "id": "581661df-081f-449f-b39e-eee98b7ac42e",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "query": [
                                {
                                  "key": "fields[player]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "581d60fb-4d9a-412c-953f-c7deb3ae1cde",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "9ac174fe-a7e9-4e9b-b151-481d641c9603",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "666436fc-a44d-4ebe-aea6-c751622a7765",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type player"
                      },
                      "response": [
                        {
                          "id": "26d780ab-db6f-4e86-99a5-3ab18d25739e",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "d67f3964-402e-48c0-884c-e9739af0ad90",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "968be2b4-159b-4395-bafc-49965a9a50a2",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "8de41dcf-182a-4a0a-92ea-0490a2a58b3a",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type player"
                      },
                      "response": [
                        {
                          "id": "0fb7e974-417a-4344-99c5-b7010d80d657",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "e5295001-fb4a-446a-a631-8e38aa140020",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "c130c941-cb10-413f-9fea-cc38c0f1647f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "be06d89e-0835-4ba1-8ec2-b8715f1b613d",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "3430b8ee-91c9-4beb-9535-6cb34f8594e7",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "9b720bba-cf0d-4707-ad0b-339ed4c10538",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "8bf87237-c6c1-4c91-ac19-6672124baf40",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "c45288e0-d700-4451-9e17-326c744b068c",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "179854f2-e21c-485b-8c3c-b022279c7cd0",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "d02c075b-0b32-4445-90de-e1b287aec80e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "2b5f5be3-ff1f-4fc5-837a-8d3e7e926761",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "b7843fec-b0a8-4c92-915f-f0a1ee53c50d",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "1cb0c6cd-f132-4988-a01a-1c4c6b8c069c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "a9f907a5-a86a-4807-8d84-91f55ff0b17b",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "de663216-70bb-4a26-935e-7b075aa491e8",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "bf0e36aa-00f6-462e-9414-e7110f472cf9",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "3b627d8f-1fb4-4378-8fb5-a5e7d4a89f94",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "7f4ddeaf-7662-41f6-a1ca-b35d34784793",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "844af278-db25-4de7-8dfc-0d1b869587da",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "9642069c-7599-4bca-85fe-c168e00ba4bf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "239f5373-60c1-4be7-bc06-785ab033c956",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "6e4193e0-706a-47ea-8570-5eca9925f5bc",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "d6a1969f-ce91-41a9-a789-64507f0c7c59",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "d42ba151-4690-4bfd-918c-eb99e01dfafb",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "49ba5c81-10a4-4b59-9343-cc5b3602c79d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "7e1e93f8-4253-426a-a682-94d092c85ef5",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "3d44df03-4a86-4995-930f-727b6e84def6",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "343d8971-0c6d-40c7-a13a-59b10d1bca17",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "1440c71c-35a4-4077-bdd3-d623fb9b5a8b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "b30669ea-26bc-45ff-a447-15155c99319b",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "d15905a3-0843-415e-8a00-979e1fd6e8b2",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "ec6e4ef4-eb2f-4112-94c3-ffec9cb241f2",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "58e98a2e-9854-4c9f-9e95-d124b117f132",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "aa77ec5a-fb0c-4da3-963f-ab1f6efcc071",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "f10d9138-3eff-4f23-90b9-8b3be9372f6f",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "756835c9-e866-4036-a4e0-ac7f5f832527",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "cb2f0337-3fe6-4d85-9573-92a88f21f883",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "db4c5844-4f42-40ac-bdea-fccb38d99f96",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b8e2a2a2-c64f-430f-8788-20ca9fa0ce5a",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "747d4274-61b4-4817-9ffb-781cb39d02a1",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "11ea52e4-9210-4342-9391-ea42c843c2a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "e837ccf8-52e3-4c4a-ae04-1651fc2e42df",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "b0e31bfe-f67b-41f1-b472-34d3e6761757",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "19dd4506-1d96-4e67-9f60-25de5f1a80ff",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "894c38a9-350c-40e1-ba78-9c8db8bec3ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "de46ce97-7f34-4727-9e9e-17089384b48d",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "e6354f9d-b361-4734-9ed6-96a1d20eb551",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "48faae5c-1533-48d9-94df-211df2b18ffc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "6fb153d4-0d1b-4805-b67b-a4e61e961135",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "1dd27a6e-0a3c-4246-af5c-f8a617c33249",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "3317f9ff-5f07-419c-adba-0d0ce45abd43",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "629fa752-a406-4634-87e9-1f1c0b66bd8c",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "324ed057-c47a-4506-8d74-a14857547b3e",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "b49b0cc2-bac0-467c-b2ef-c254d926bd19",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "b55ff8cf-cd2e-475c-9ab8-c86fc1a25c3f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "03efd655-9abf-426f-874a-805b20900d76",
              "name": "/playerAchievement",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>",
                      "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>",
                      "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                    },
                    {
                      "key": "filter",
                      "value": "<string>",
                      "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>",
                      "description": "Number of pages to return.  Can be used with page[size]"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>",
                      "description": "Number of elements per page.  Can be used with page[number]"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>",
                      "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>",
                      "description": "Maximum number of items to return.  Can be used with page[offset]"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>",
                      "description": "For requesting total pages/records be included in the response page meta data"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"type\": \"<string>\",\n            \"id\": \"###################\",\n            \"attributes\": {\n                \"createTime\": \"<dateTime>\",\n                \"currentSteps\": \"<integer>\",\n                \"state\": \"<string>\",\n                \"updateTime\": \"<dateTime>\"\n            },\n            \"relationships\": {\n                \"achievement\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"<string>\"\n                },\n                \"player\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"<string>\"\n                }\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\",\n            \"attributes\": {\n                \"createTime\": \"<dateTime>\",\n                \"currentSteps\": \"<integer>\",\n                \"state\": \"<string>\",\n                \"updateTime\": \"<dateTime>\"\n            },\n            \"relationships\": {\n                \"achievement\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"<string>\"\n                },\n                \"player\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"<string>\"\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"attributes\": \"<object>\",\n            \"id\": \"<string>\",\n            \"relationships\": \"<object>\",\n            \"type\": \"<string>\"\n        }\n    ]\n}"
            },
            {
              "id": "28c3c1f4-fa0a-4d0e-8b3a-35ec4ce47d82",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"something\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "224ecb19-6603-4ef0-ae2b-62c70bd8f593",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "0b5070f5-d165-4da5-9e48-93d8e2fc4bf3",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "9dde0b5a-6eab-489b-ad58-64d04c24cb9e"
              }
            }
          ],
          "_postman_id": "f324e154-e4f3-4c8b-93ca-7674714c4302",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "4fe7a5dc-4a3c-41a1-bbc7-8b4fd17447ba"
    },
    {
      "name": "player Achievement Blah 2",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "player",
              "item": [
                {
                  "name": "{player Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "aa81f3ff-dc08-4a4d-8c9d-92f656fad644",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "0d2a1852-8ba0-4509-b87b-9834f49a6122",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "38ad91c2-7975-4a50-9ad0-ba2c6249d1f5",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type player"
                      },
                      "response": [
                        {
                          "id": "864dbe40-f660-4eb0-a5d9-185e6fed46c5",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "query": [
                                {
                                  "key": "fields[player]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "2571b8a5-eae3-4217-a9ec-fc3360d6ea62",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "c618180b-feab-4012-b7ae-dcea30a2d525",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "24459d84-1bfd-4950-8b2f-0a9cd14df16d",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type player"
                      },
                      "response": [
                        {
                          "id": "1107a6a0-1b85-4cef-a3f3-a633966c3d35",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "e1cee996-e15f-4951-88bb-01e0b3fa8adf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "08e80fda-6876-4e52-894a-224e6611b471",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "43b98484-0a3c-4a18-9c49-a1c08782be4b",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type player"
                      },
                      "response": [
                        {
                          "id": "07b2805f-97b0-433a-8eb8-087a16c24bc6",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "689f7a65-bb69-49d1-8c08-c6b36bbcd482",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "531a2ccc-f609-43d4-9f23-c2ff3460286f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "cbaa8274-fa00-444b-a928-9920e16548fe",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "ac9e0d4c-0b80-415b-adc2-4962f8f7999d",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "19c21608-151f-42c7-8a92-f15a0c926ed4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "d2eef90c-eb88-406a-a99b-bea0c0994126",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "bfe6e15a-0f3a-45e9-9103-bc795887a077",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "afcbf1f7-4b13-457b-ba61-03b972c3e3af",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "e885344a-251d-477e-a796-e265b6ecaee0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "92ae494a-c8ae-41dd-a6ae-b72b0e97f8f5",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "cb0bcbf0-1d5c-4ce3-b722-adf589fd57e0",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "b91cdd6e-518a-4904-975c-29c03836f85d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "079668a3-455a-41ed-95ad-7285cca7bb8b",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "6959d541-f3fb-4d67-8588-0bbdfb7d62f9",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "e226ee23-5e87-42ff-8fa9-e26fad6d3849",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "0a1e7647-3c7d-46c7-94e8-bfd39dbbd2dd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "bbde935b-3e0e-45c3-a971-dd82273dac04",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "e07cdd3a-684d-482b-b64d-4bafa155a833",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "1a6d6e72-20e4-4897-90b8-94b95180d7f0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "bd8f1659-8468-4a42-a31b-7467806406ae",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "ba4b8180-20de-4708-a8ca-d7d170ba490d",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "083dd813-9473-4dd3-9ed2-725c7126cbf2",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "5827f8aa-7df5-4ca4-8c51-3d600b0b87cd",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "ad709706-168f-4d5d-87fd-43d99d3ed3b1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "fe019621-6b70-4f23-810d-715b267b7b3f",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "77ee7c74-68de-45e9-92a3-1387a8a80e4c",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "4c54f81f-7e66-4e26-93bb-53a07299e5ad",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "d624d817-53ef-4630-9646-20873e03e7a3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "6d1eefd5-6f6e-4f67-a0b2-66aeeaa3d9b1",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "827e9f68-ac1f-43f5-a00e-e52aecd3726e",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "95688aaf-f9c4-4cf6-8266-6f0f72d42829",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "dff70be8-eb0f-48f5-9dbd-053eb2b17fc8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "4ab5a267-e9f5-4498-b92d-3bac4419af00",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "9279b62c-2b67-4c40-b664-ca4f54b4104f",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "6106bea9-53a5-4e26-b62a-fc3689576ab6",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "9672833d-f3c9-487c-98ff-e95eed94c208",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "1e564c30-2729-4b6c-9229-6fae4da33215",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "bc890113-ea38-4ae0-a4b1-cefd369f0e96",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "ab830198-da41-4fb6-bcd9-cdfb8de2c8e5",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "586b34e5-f84c-4dc9-9ba6-e7cce5a3734d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "fbaebdee-9e43-486f-a634-e250983997ae",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "18219806-6902-42a9-a669-634237e15ccb",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "4866d9ad-e99e-4bd8-a0b1-6c3d4883634c",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "76d94b55-80bf-45cf-acd1-a7e3e1527a7f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "23b47270-fe6a-460b-a31e-f97385006b8a",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "8027f60e-fbf8-4881-b55e-c3822c076f51",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "9fa01849-1b1f-4a37-b7db-f4c7d7361a21",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "78ebceb7-295c-4578-b98a-e3d5faeeb723",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "f2b4f420-2b70-47f8-a3c7-36965225b8d5",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "50b59bb6-ef51-453d-8975-dfd2d4753745",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "14625dd0-0c84-48e5-9a14-f9cf87d19b89",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "3d489c4d-dd29-413d-be55-f0c3478331e6",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "244e51b8-0db6-4037-a1c9-d12f1d5cb502",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "703f7cc9-ab3c-4794-a196-343c438e9112",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "ac10f0d9-956c-41ad-8d6d-670e4472c9c4",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "fb2dd7c4-02d3-4352-a5b7-48c7fdf28bfc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "b01ecfda-0ec6-42f7-ad6b-8ef427b6704f",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "0e6dd790-da4c-409a-8096-b4f855a2a147"
              }
            }
          ],
          "_postman_id": "3cbbdba4-c2fb-4220-896f-f9fe30ec5ec7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "f9e98033-8f3b-4d5a-b56d-a337bfabe363"
    },
    {
      "name": "player Achievement Blah 3",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "player",
              "item": [
                {
                  "name": "{player Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "e2213ee9-6a09-46eb-8235-41a19749c313",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "95049502-5809-46c1-a132-e841989e0c9c",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "5a87c234-a0fa-42e7-8d5d-1ecfa8f44af4",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type player"
                      },
                      "response": [
                        {
                          "id": "4985c2a6-4576-412f-8652-ad23f1ddb79c",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "query": [
                                {
                                  "key": "fields[player]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "e5c2e9a5-2a0a-42e4-a514-3df4dfebc39b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "2e8fb247-53d0-4662-b7e4-5c9c7fdc736e",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "83a9d361-1f2d-41b1-96f6-fe5c6229cf09",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type player"
                      },
                      "response": [
                        {
                          "id": "cb25fec6-6fa2-41d4-95c4-9bac2209ddf9",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "c4d4dd7c-0d40-4876-aa13-7e9af6b8d914",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "d944a6ef-e3d1-40c7-ac38-5cf35bebf8e6",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "0e5dc73b-2627-4ac2-b75a-1440fc8ebe30",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type player"
                      },
                      "response": [
                        {
                          "id": "d8351880-ad6e-458b-9aab-82db8a02d095",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "c60135f3-367f-4930-9207-d6b5df5e0951",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "a6d69cf8-8de0-428b-b764-6885a502888b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "e9b8c461-c541-47d0-92fc-a7a484bca206",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "985000fd-b271-4d01-8c9b-6a6207ff863e",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "3fabe397-bdbb-4ad3-9be5-8d76e16923f5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "61df1225-97ab-4813-aadf-be09f04917ac",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "72b42eb6-abfb-4571-adef-0f299f1f6265",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "68577f66-0bb6-4e06-a02f-99040701b83f",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "90c7fba7-efb0-4de6-aee7-9a9e7528bff3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "926b4c9d-1d34-410a-8563-71aef47d98ee",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "0c732d4f-d560-44f8-a315-2610dc071ae9",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "e72b384f-a3d5-4fbc-a005-edbb855d04da",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "38832901-2b27-4420-8e5e-90bb4cd0c931",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "e563071c-d21e-4f5e-b3a9-f596747a1502",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "029b44e4-4c0d-4628-a529-0a8f57bd87d3",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "5374a825-b3eb-44b6-97fb-4464061a31b2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "e009bd94-1135-47b3-944a-316432f9ac81",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "a58eb606-097b-480b-a7e4-ffc305b03097",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "9a633f83-6416-4c9b-bec7-1fb641dab710",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "e10342d0-cc31-4ced-afab-9f647025bf15",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "4ba0ca05-ce25-45e0-90f0-aa10b16be33e",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "6e47db09-96c6-4a08-9f1c-99f819dd7acd",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "23796acd-b02a-455e-b510-faa90028157a",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "9c3de7a3-d27e-492c-9f49-7ef75b8d069f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "a635f5f2-78e2-48c3-938a-cb4092eda25d",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "374fd630-5f88-4050-ae28-e19124ba1fa0",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "901135d8-4d0e-485a-836e-f6927c2b183c",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "29cbead3-b918-49e2-86dd-b69e037648c3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "22860a35-b099-4c24-ad89-6de4c74bed45",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "5d37226a-b4d9-41b3-ac0f-2c2c5f5ef0e5",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "f4b1266a-2284-4dda-b1ae-779dc9e70c0e",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "cb4a2062-3225-4029-9132-deee0c97e22c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "fb9ca436-e61d-49de-a526-e11d430fd0a5",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "7cb33a0f-4f8d-4f17-9999-b23b1409bc56",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "f977528b-5096-41f3-aa6f-b9d80df55876",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "329b4270-ff8a-4cca-b101-fe320d25887a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "2707f964-77b4-4137-baab-99cd2f664216",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b45ec80a-eff7-42ec-b40a-ea4cd71a7bb2",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "f8279e08-12ed-45ee-8c8d-54a0800d25e1",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "0ec872f4-48ff-4b68-8484-24de69094f56",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "eb10cb8b-1509-419c-a1ac-7feaff2fee28",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "2d6d70c1-b9ac-4092-9af9-234f91f0d368",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "f5c43062-c2b9-4c81-9cba-7956e0c957fb",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "342ef19f-b0c1-4c51-b23b-2e59f6c0b27e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "830a69de-db20-485e-aa97-423b085fbe2a",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "628166ad-d72d-4985-9226-7aba56cf0c2e",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "f6a0bc6a-48b1-440e-8373-2794ab04374f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "659b87a6-c079-475b-b19e-c8b47737c0b7",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "381edc29-0f9d-4d2f-8603-5db441dfa036",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "d607c8bb-725b-4e19-8052-a66f44ce6f48",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "c71ad119-2d6e-4e0c-a741-9c908908080e",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "3338d4d2-6922-4949-8748-1c80cc4cb87d",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "78703a95-37ed-47d7-b35a-6ad8bdad1ab3",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "5dea182d-c2e3-4c13-9487-4446f2c785de",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "497dc540-dad8-48cf-bbbf-864023f56e40",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "33c0d2a0-8d95-4f9e-89bd-53242432c7a2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "02bf8b21-4b8e-4bf4-b004-5aab1eb167d8",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "3009b7d2-83be-4d96-a416-774fa9a19684"
              }
            }
          ],
          "_postman_id": "23387c15-2cc1-4c80-844d-68eac400d7ee",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "ca855047-997d-4419-9c50-2d7feb548b17"
    },
    {
      "name": "player Achievement Copy",
      "item": [
        {
          "name": "{player Achievement Id}",
          "item": [
            {
              "name": "player",
              "item": [
                {
                  "name": "{player Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "b92ef772-a0ef-4e9d-b787-c5f1a71d522a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "846bc4a4-f09b-4371-828a-e9d6134c9ac7",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "d67e997e-3fa9-48db-a258-e7fcc358ec72",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type player"
                      },
                      "response": [
                        {
                          "id": "e74c1356-9886-4968-9909-62f9ccc1ad46",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "query": [
                                {
                                  "key": "fields[player]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "689b0ad6-fe69-4e12-9af0-3a70b0069763",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "c8d595b7-0e4b-42de-bee5-c79906696973",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "d6cce7d9-714b-4857-af5b-7b0b9941ae94",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type player"
                      },
                      "response": [
                        {
                          "id": "5f8f2485-a737-48dd-ac25-6cb19c597a72",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/player/:playerId",
                      "_postman_id": "4cbaccdf-c0d6-44a8-a25a-c1671efe5ac0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "0a460f06-4332-482b-a5ee-e5ac7706c73c",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "725752f7-db97-4b28-bd81-3a9427d24c2c",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type player"
                      },
                      "response": [
                        {
                          "id": "9793e82e-1993-426d-b868-134dee7985e8",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "0dec5302-6d73-44ca-8876-6531ba668efb",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "dd6bde00-51ff-444f-984a-db4e6b5c237f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "72a97b3d-4d86-44ae-bd18-b8b8cf4ac01a",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "6e8c29f6-861d-4783-b56f-1658125e6a7b",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/player",
                  "_postman_id": "b31793bb-a1b4-4684-9eb5-be6ee6b99576",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "bf86f438-773b-40e9-86ba-fe336c1b8e8d",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "89c6d6e3-7da7-4ae0-9244-8860a354f714",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "d5073be8-f88c-4112-a620-30de67aeb59f",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "123dd3a6-fdf8-4fce-9459-361f2dc9cd8b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "92437b09-b38a-472b-8e17-4784c113e500",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "e7fa2787-56f9-4a5f-bcbd-6517f6c72eed",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/player",
                      "_postman_id": "f6995cd7-3cb3-477f-b4c0-395001c910fc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "ffa90927-1411-4a80-a4bb-239e1ff9ea14",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "4131de10-0a0e-46d9-ac32-28d2bef97e2b",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "8feae768-a7bb-4ff8-b9be-d970c1f96c8f",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "achievement",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "6564c759-e129-4b7a-9e0f-88698b6d869e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "filter[achievement]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator infix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator infix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator in"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator in"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator not"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator not"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator gt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator gt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator le"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator le"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator ge"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator ge"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute description using the operator lt"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute order using the operator lt"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "7898fda2-d471-4e35-81c2-bc37ae459f95",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for achievement"
                      },
                      "response": [
                        {
                          "id": "9c110a1e-14c3-43d4-9762-d3d3972abbe9",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement?filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "query": [
                                {
                                  "key": "filter[achievement]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.description][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.experiencePoints][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.order][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.revealedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockedIconUrl][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[achievement.unlockersCount][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/relationships/achievement",
                      "_postman_id": "19e4abda-7e9e-4790-8034-73e5bfca7587",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "relationships",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "id": "49bc3c18-3c50-46d5-b516-aa10ec85a83e",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship achievement"
                      },
                      "response": [
                        {
                          "id": "6a1202a6-06ba-455e-8247-d77c0bbb2081",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/relationships/achievement",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "relationships",
                                "achievement"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "9421b7ee-18f5-41e7-a82b-4e2e09de6b4a",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "e1b4c2f5-5399-4037-b06e-f2497fb09a05",
              "_postman_isSubFolder": true
            },
            {
              "name": "achievement",
              "item": [
                {
                  "name": "{achievement Id}",
                  "item": [
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "53fea6ad-e08f-45f3-bcf1-373e60daab52",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "query": [
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of achievement fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "83467b2a-a891-45b1-b45f-ee9459279c38",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "333cf0fb-ee03-4a7e-8104-6362ecc6ccc3",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "5718c45a-7214-4cd2-b4ed-2d60ad9996a7",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId?fields[achievement]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "query": [
                                {
                                  "key": "fields[achievement]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "ca5c0662-6f8d-4709-9d1f-3527e3f7ba5c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "a67e5813-08c0-47e2-b4ad-0aa88a55ad45",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "943b9716-66f7-461f-8f18-3e48fd618b68",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "62e7731a-bcea-45b2-8c57-1e48e3e1a9d6",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerAchievement/:playerAchievementId/achievement/:achievementId",
                      "_postman_id": "71bf1ae4-3aaf-47a4-9d27-6c57d3a9342f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement",
                            ":achievementId"
                          ],
                          "variable": [
                            {
                              "id": "722076b0-9fb0-4ccf-883a-86f2c715adca",
                              "key": "playerAchievementId",
                              "value": "<string>",
                              "description": "(Required) playerAchievement Identifier",
                              "type": "string"
                            },
                            {
                              "id": "6783762d-dcd7-4254-a0a0-9331fff7c9ab",
                              "key": "achievementId",
                              "value": "<string>",
                              "description": "(Required) achievement Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type achievement"
                      },
                      "response": [
                        {
                          "id": "f679d770-8c81-4551-bd69-5eade20ea518",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement/:achievementId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerAchievement",
                                ":playerAchievementId",
                                "achievement",
                                ":achievementId"
                              ],
                              "variable": [
                                {
                                  "key": "playerAchievementId"
                                },
                                {
                                  "key": "achievementId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "bdcc38cf-7877-4937-acbf-eb786d4cceb2",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "885988d3-c60d-4f3c-85e7-3eae8e0686d3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[achievement]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of achievement fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[achievement]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[achievement.description][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator infix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator infix"
                        },
                        {
                          "key": "filter[achievement.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[achievement.order][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator infix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator infix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator infix"
                        },
                        {
                          "key": "filter[achievement.description][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator in"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator in"
                        },
                        {
                          "key": "filter[achievement.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[achievement.order][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator in"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator in"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][in]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator in"
                        },
                        {
                          "key": "filter[achievement.description][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator not"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator not"
                        },
                        {
                          "key": "filter[achievement.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[achievement.order][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator not"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator not"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][not]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator not"
                        },
                        {
                          "key": "filter[achievement.description][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.order][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator prefix"
                        },
                        {
                          "key": "filter[achievement.description][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator gt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator gt"
                        },
                        {
                          "key": "filter[achievement.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[achievement.order][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator gt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator gt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator gt"
                        },
                        {
                          "key": "filter[achievement.description][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator le"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator le"
                        },
                        {
                          "key": "filter[achievement.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[achievement.order][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator le"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator le"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][le]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator le"
                        },
                        {
                          "key": "filter[achievement.description][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.order][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator notnull"
                        },
                        {
                          "key": "filter[achievement.description][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.order][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator postfix"
                        },
                        {
                          "key": "filter[achievement.description][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator ge"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator ge"
                        },
                        {
                          "key": "filter[achievement.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[achievement.order][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator ge"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator ge"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator ge"
                        },
                        {
                          "key": "filter[achievement.description][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.order][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator isnull"
                        },
                        {
                          "key": "filter[achievement.description][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute description using the operator lt"
                        },
                        {
                          "key": "filter[achievement.experiencePoints][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute experiencePoints using the operator lt"
                        },
                        {
                          "key": "filter[achievement.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[achievement.order][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute order using the operator lt"
                        },
                        {
                          "key": "filter[achievement.revealedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute revealedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockedIconUrl][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockedIconUrl using the operator lt"
                        },
                        {
                          "key": "filter[achievement.unlockersCount][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of achievement by the attribute unlockersCount using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "23cba5b2-ed1a-4189-823b-9677497e9e9a",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship achievement"
                  },
                  "response": [
                    {
                      "id": "311851c9-6327-461b-a088-1a5bb4ffc8e6",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement?sort=<string>,<string>&fields[achievement]=<string>,<string>&include=<string>,<string>&filter[achievement]=<string>&filter[achievement.description][infix]=<string>&filter[achievement.experiencePoints][infix]=<string>&filter[achievement.name][infix]=<string>&filter[achievement.order][infix]=<string>&filter[achievement.revealedIconUrl][infix]=<string>&filter[achievement.unlockedIconUrl][infix]=<string>&filter[achievement.unlockersCount][infix]=<string>&filter[achievement.description][in]=<string>&filter[achievement.experiencePoints][in]=<string>&filter[achievement.name][in]=<string>&filter[achievement.order][in]=<string>&filter[achievement.revealedIconUrl][in]=<string>&filter[achievement.unlockedIconUrl][in]=<string>&filter[achievement.unlockersCount][in]=<string>&filter[achievement.description][not]=<string>&filter[achievement.experiencePoints][not]=<string>&filter[achievement.name][not]=<string>&filter[achievement.order][not]=<string>&filter[achievement.revealedIconUrl][not]=<string>&filter[achievement.unlockedIconUrl][not]=<string>&filter[achievement.unlockersCount][not]=<string>&filter[achievement.description][prefix]=<string>&filter[achievement.experiencePoints][prefix]=<string>&filter[achievement.name][prefix]=<string>&filter[achievement.order][prefix]=<string>&filter[achievement.revealedIconUrl][prefix]=<string>&filter[achievement.unlockedIconUrl][prefix]=<string>&filter[achievement.unlockersCount][prefix]=<string>&filter[achievement.description][gt]=<string>&filter[achievement.experiencePoints][gt]=<string>&filter[achievement.name][gt]=<string>&filter[achievement.order][gt]=<string>&filter[achievement.revealedIconUrl][gt]=<string>&filter[achievement.unlockedIconUrl][gt]=<string>&filter[achievement.unlockersCount][gt]=<string>&filter[achievement.description][le]=<string>&filter[achievement.experiencePoints][le]=<string>&filter[achievement.name][le]=<string>&filter[achievement.order][le]=<string>&filter[achievement.revealedIconUrl][le]=<string>&filter[achievement.unlockedIconUrl][le]=<string>&filter[achievement.unlockersCount][le]=<string>&filter[achievement.description][notnull]=<string>&filter[achievement.experiencePoints][notnull]=<string>&filter[achievement.name][notnull]=<string>&filter[achievement.order][notnull]=<string>&filter[achievement.revealedIconUrl][notnull]=<string>&filter[achievement.unlockedIconUrl][notnull]=<string>&filter[achievement.unlockersCount][notnull]=<string>&filter[achievement.description][postfix]=<string>&filter[achievement.experiencePoints][postfix]=<string>&filter[achievement.name][postfix]=<string>&filter[achievement.order][postfix]=<string>&filter[achievement.revealedIconUrl][postfix]=<string>&filter[achievement.unlockedIconUrl][postfix]=<string>&filter[achievement.unlockersCount][postfix]=<string>&filter[achievement.description][ge]=<string>&filter[achievement.experiencePoints][ge]=<string>&filter[achievement.name][ge]=<string>&filter[achievement.order][ge]=<string>&filter[achievement.revealedIconUrl][ge]=<string>&filter[achievement.unlockedIconUrl][ge]=<string>&filter[achievement.unlockersCount][ge]=<string>&filter[achievement.description][isnull]=<string>&filter[achievement.experiencePoints][isnull]=<string>&filter[achievement.name][isnull]=<string>&filter[achievement.order][isnull]=<string>&filter[achievement.revealedIconUrl][isnull]=<string>&filter[achievement.unlockedIconUrl][isnull]=<string>&filter[achievement.unlockersCount][isnull]=<string>&filter[achievement.description][lt]=<string>&filter[achievement.experiencePoints][lt]=<string>&filter[achievement.name][lt]=<string>&filter[achievement.order][lt]=<string>&filter[achievement.revealedIconUrl][lt]=<string>&filter[achievement.unlockedIconUrl][lt]=<string>&filter[achievement.unlockersCount][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[achievement]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[achievement]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.description][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.experiencePoints][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.order][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.revealedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockedIconUrl][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[achievement.unlockersCount][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"experiencePoints\": \"<integer>\",\n    \"initialState\": \"<string>\",\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"revealedIconUrl\": \"<string>\",\n    \"totalSteps\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"unlockedIconUrl\": \"<string>\",\n    \"unlockersAvgDuration\": \"<long>\",\n    \"unlockersCount\": \"<long>\",\n    \"unlockersMaxDuration\": \"<long>\",\n    \"unlockersMinDuration\": \"<long>\",\n    \"unlockersPercent\": \"<number>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerAchievement/:playerAchievementId/achievement",
                  "_postman_id": "656d215c-2154-469c-8413-44d436078165",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"description\": \"<string>\",\n            \"experiencePoints\": \"<integer>\",\n            \"initialState\": \"<string>\",\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"revealedIconUrl\": \"<string>\",\n            \"totalSteps\": \"<integer>\",\n            \"type\": \"<string>\",\n            \"unlockedIconUrl\": \"<string>\",\n            \"unlockersAvgDuration\": \"<long>\",\n            \"unlockersCount\": \"<long>\",\n            \"unlockersMaxDuration\": \"<long>\",\n            \"unlockersMinDuration\": \"<long>\",\n            \"unlockersPercent\": \"<number>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId",
                        "achievement"
                      ],
                      "variable": [
                        {
                          "id": "e929bb91-4bc2-442d-8332-2c9c59451a14",
                          "key": "playerAchievementId",
                          "value": "<string>",
                          "description": "(Required) playerAchievement Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type achievement and adds it to achievement"
                  },
                  "response": [
                    {
                      "id": "baaf9e9a-d4c0-4064-8236-453612b0a245",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId/achievement",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerAchievement",
                            ":playerAchievementId",
                            "achievement"
                          ],
                          "variable": [
                            {
                              "key": "playerAchievementId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"description\": \"<string>\",\n   \"experiencePoints\": \"<integer>\",\n   \"initialState\": \"<string>\",\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"revealedIconUrl\": \"<string>\",\n   \"totalSteps\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"unlockedIconUrl\": \"<string>\",\n   \"unlockersAvgDuration\": \"<long>\",\n   \"unlockersCount\": \"<long>\",\n   \"unlockersMaxDuration\": \"<long>\",\n   \"unlockersMinDuration\": \"<long>\",\n   \"unlockersPercent\": \"<number>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "ea918cf0-d269-4e3a-8b8e-548bd7b7adc6",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "327acc8f-511d-4b0c-8fa7-cf67f57e4336",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerAchievement fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "87a33414-4f22-4843-a839-547cf65ab5e7",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "423279f7-205c-4d1c-be1c-462897863f8b",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId?fields[playerAchievement]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerAchievement]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "ce99e56e-f664-457b-9512-9083b7360a7e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "7a86228d-4598-4725-ae83-186a3560ca23",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "6cfe1074-51da-42d8-864c-cfe50a1c426d",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerAchievement/:playerAchievementId",
              "_postman_id": "1ed02e4e-2636-4310-812e-adb1dc63940a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement",
                    ":playerAchievementId"
                  ],
                  "variable": [
                    {
                      "id": "f0f3998e-69c4-4464-9b78-b9099b8579d8",
                      "key": "playerAchievementId",
                      "value": "<string>",
                      "description": "(Required) playerAchievement Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerAchievement"
              },
              "response": [
                {
                  "id": "456884f5-7e5f-421f-980b-5095bcfe5f6f",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerAchievement/:playerAchievementId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerAchievement",
                        ":playerAchievementId"
                      ],
                      "variable": [
                        {
                          "key": "playerAchievementId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "39100522-107b-4bac-96d8-329913bf6150",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "8f510ce9-0c6d-4e49-878f-523f0995065b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerAchievement"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerAchievement]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerAchievement fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerAchievement]",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerAchievement using a 'joined' RSQL expression"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerAchievement"
          },
          "response": [
            {
              "id": "ca4a16f6-2d07-4dcd-a020-75ddf16f86ae",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerAchievement?sort=<string>,<string>&fields[playerAchievement]=<string>,<string>&include=<string>,<string>&filter[playerAchievement]=<string>&filter=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerAchievement"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerAchievement]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerAchievement]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"currentSteps\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"updateTime\": \"<dateTime>\"\n   },\n   \"relationships\": {\n    \"achievement\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerAchievement",
          "_postman_id": "351a9caa-8d1a-4940-9477-1b406ba67348",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"currentSteps\": \"<integer>\",\n            \"state\": \"<string>\",\n            \"updateTime\": \"<dateTime>\"\n        },\n        \"relationships\": {\n            \"achievement\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerAchievement",
            "description": "Creates an item of type playerAchievement"
          },
          "response": [
            {
              "id": "bddf67fb-9320-4d16-a7dc-5d706c1bf50c",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerAchievement"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"currentSteps\": \"<integer>\",\n   \"state\": \"<string>\",\n   \"updateTime\": \"<dateTime>\"\n  },\n  \"relationships\": {\n   \"achievement\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        },
        {
          "name": "New Request-2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
                ],
                "type": "text/javascript",
                "id": "310107bc-9a77-4b08-a695-15dd0c9b71fb"
              }
            }
          ],
          "_postman_id": "8bf0fe16-cee0-4238-aedd-42e9e00ee5d8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "24becaa9-011a-48b0-b590-0445d06b76fd"
    },
    {
      "name": "division",
      "item": [
        {
          "name": "{division Id}",
          "item": [
            {
              "name": "/division/:divisionId",
              "_postman_id": "d1cc7683-584c-4619-aa44-6c1fbdb120a6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/division/:divisionId?fields[division]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "division",
                    ":divisionId"
                  ],
                  "query": [
                    {
                      "key": "fields[division]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of division fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "836ac949-e4cf-4d51-90e7-f0c88322c5a5",
                      "key": "divisionId",
                      "value": "<string>",
                      "description": "(Required) division Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type division"
              },
              "response": [
                {
                  "id": "1532cffc-8436-4bbf-9615-176a0b3c2c78",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/division/:divisionId?fields[division]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "division",
                        ":divisionId"
                      ],
                      "query": [
                        {
                          "key": "fields[division]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "divisionId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"league\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"threshold\": \"<integer>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/division/:divisionId",
              "_postman_id": "8dc522dc-1fbf-4324-9d65-0d7ebee6973e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/division/:divisionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "division",
                    ":divisionId"
                  ],
                  "variable": [
                    {
                      "id": "47b5b61b-35ce-4324-b4a5-799aea91deeb",
                      "key": "divisionId",
                      "value": "<string>",
                      "description": "(Required) division Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type division"
              },
              "response": [
                {
                  "id": "f8557898-e0ae-40ad-b47f-759a3b064aae",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/division/:divisionId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "division",
                        ":divisionId"
                      ],
                      "variable": [
                        {
                          "key": "divisionId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/division/:divisionId",
              "_postman_id": "c348d589-904f-4d6f-a508-0b876e648b2a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"league\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"threshold\": \"<integer>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/division/:divisionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "division",
                    ":divisionId"
                  ],
                  "variable": [
                    {
                      "id": "53c7b2e1-2aa1-4e8e-8fd8-4b49bafa08b7",
                      "key": "divisionId",
                      "value": "<string>",
                      "description": "(Required) division Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type division"
              },
              "response": [
                {
                  "id": "83e0f955-ed69-4a25-9ef7-d807d7de85d6",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/division/:divisionId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "division",
                        ":divisionId"
                      ],
                      "variable": [
                        {
                          "key": "divisionId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "3f5839b1-8721-4810-bfc5-ba0c3d42ecbb",
          "_postman_isSubFolder": true
        },
        {
          "name": "/division",
          "_postman_id": "65ee6ec0-0c3d-4ad9-bce0-b54185a1b7cb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/division?sort=<string>,<string>&fields[division]=<string>,<string>&include=<string>,<string>&filter[division]=<string>&filter=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "division"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[division]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of division fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[division]",
                  "value": "<string>",
                  "description": "Filters the collection of division using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of division using a 'joined' RSQL expression"
                },
                {
                  "key": "filter[division.league][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator infix"
                },
                {
                  "key": "filter[division.name][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator infix"
                },
                {
                  "key": "filter[division.threshold][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator infix"
                },
                {
                  "key": "filter[division.league][in]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator in"
                },
                {
                  "key": "filter[division.name][in]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator in"
                },
                {
                  "key": "filter[division.threshold][in]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator in"
                },
                {
                  "key": "filter[division.league][not]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator not"
                },
                {
                  "key": "filter[division.name][not]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator not"
                },
                {
                  "key": "filter[division.threshold][not]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator not"
                },
                {
                  "key": "filter[division.league][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator prefix"
                },
                {
                  "key": "filter[division.name][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator prefix"
                },
                {
                  "key": "filter[division.threshold][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator prefix"
                },
                {
                  "key": "filter[division.league][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator gt"
                },
                {
                  "key": "filter[division.name][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator gt"
                },
                {
                  "key": "filter[division.threshold][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator gt"
                },
                {
                  "key": "filter[division.league][le]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator le"
                },
                {
                  "key": "filter[division.name][le]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator le"
                },
                {
                  "key": "filter[division.threshold][le]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator le"
                },
                {
                  "key": "filter[division.league][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator notnull"
                },
                {
                  "key": "filter[division.name][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator notnull"
                },
                {
                  "key": "filter[division.threshold][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator notnull"
                },
                {
                  "key": "filter[division.league][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator postfix"
                },
                {
                  "key": "filter[division.name][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator postfix"
                },
                {
                  "key": "filter[division.threshold][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator postfix"
                },
                {
                  "key": "filter[division.league][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator ge"
                },
                {
                  "key": "filter[division.name][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator ge"
                },
                {
                  "key": "filter[division.threshold][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator ge"
                },
                {
                  "key": "filter[division.league][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator isnull"
                },
                {
                  "key": "filter[division.name][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator isnull"
                },
                {
                  "key": "filter[division.threshold][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator isnull"
                },
                {
                  "key": "filter[division.league][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute league using the operator lt"
                },
                {
                  "key": "filter[division.name][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute name using the operator lt"
                },
                {
                  "key": "filter[division.threshold][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of division by the attribute threshold using the operator lt"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type division"
          },
          "response": [
            {
              "id": "a8b51efe-fab9-4bea-95d2-65571531020f",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/division?sort=<string>,<string>&fields[division]=<string>,<string>&include=<string>,<string>&filter[division]=<string>&filter=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "division"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[division]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[division]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.league][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.name][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[division.threshold][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"league\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threshold\": \"<integer>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"league\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threshold\": \"<integer>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/division",
          "_postman_id": "690626b7-6300-48a4-bac1-def0f1139dc7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"league\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"threshold\": \"<integer>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/division",
            "description": "Creates an item of type division"
          },
          "response": [
            {
              "id": "6fa87889-6179-467e-873d-d6c005af07a9",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/division"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"league\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"threshold\": \"<integer>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
            }
          ]
        }
      ],
      "_postman_id": "16f9feaa-4414-4825-9358-e919f3a3bad2"
    },
    {
      "name": "event",
      "item": [
        {
          "name": "{event Id}",
          "item": [
            {
              "name": "/event/:eventId",
              "_postman_id": "e0ef3b5c-6cc0-48a4-8fc9-26d817d3bb3d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/event/:eventId?fields[event]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    ":eventId"
                  ],
                  "query": [
                    {
                      "key": "fields[event]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of event fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "ccdc4b64-5e68-46b4-885a-d68157fc9827",
                      "key": "eventId",
                      "value": "<string>",
                      "description": "(Required) event Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type event"
              },
              "response": [
                {
                  "id": "de2c7784-edae-4326-abf1-67be77a953e7",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/event/:eventId?fields[event]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        ":eventId"
                      ],
                      "query": [
                        {
                          "key": "fields[event]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "eventId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"imageUrl\": \"<string>\",\n   \"name\": \"<string>\",\n   \"type\": \"<string>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/event/:eventId",
              "_postman_id": "f8a5772d-2188-497b-9c5a-d62b361a43b5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/event/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "id": "e818329f-a3a4-430f-85c4-593d6f070e80",
                      "key": "eventId",
                      "value": "<string>",
                      "description": "(Required) event Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type event"
              },
              "response": [
                {
                  "id": "d32864a7-9b0e-4e85-9e1e-1b2b48ae6d18",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/event/:eventId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        ":eventId"
                      ],
                      "variable": [
                        {
                          "key": "eventId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/event/:eventId",
              "_postman_id": "7b91021b-d0fd-40fa-bd44-11d39fc7a91e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"imageUrl\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/event/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "id": "08199ecd-d156-4c62-b9a2-f1d49e035b4c",
                      "key": "eventId",
                      "value": "<string>",
                      "description": "(Required) event Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type event"
              },
              "response": [
                {
                  "id": "9994eef8-6621-4827-a4d8-40c8367f3d5b",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/event/:eventId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "event",
                        ":eventId"
                      ],
                      "variable": [
                        {
                          "key": "eventId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "e2a10b67-c7b4-45e2-b657-0f0312f86325",
          "_postman_isSubFolder": true
        },
        {
          "name": "/event",
          "_postman_id": "c1bf5905-db8e-4c5a-83a0-ab8230f70a5d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/event?sort=<string>,<string>&fields[event]=<string>,<string>&include=<string>,<string>&filter[event]=<string>&filter=<string>&filter[event.imageUrl][infix]=<string>&filter[event.name][infix]=<string>&filter[event.imageUrl][in]=<string>&filter[event.name][in]=<string>&filter[event.imageUrl][not]=<string>&filter[event.name][not]=<string>&filter[event.imageUrl][prefix]=<string>&filter[event.name][prefix]=<string>&filter[event.imageUrl][gt]=<string>&filter[event.name][gt]=<string>&filter[event.imageUrl][le]=<string>&filter[event.name][le]=<string>&filter[event.imageUrl][notnull]=<string>&filter[event.name][notnull]=<string>&filter[event.imageUrl][postfix]=<string>&filter[event.name][postfix]=<string>&filter[event.imageUrl][ge]=<string>&filter[event.name][ge]=<string>&filter[event.imageUrl][isnull]=<string>&filter[event.name][isnull]=<string>&filter[event.imageUrl][lt]=<string>&filter[event.name][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "event"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[event]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of event fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[event]",
                  "value": "<string>",
                  "description": "Filters the collection of event using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of event using a 'joined' RSQL expression"
                },
                {
                  "key": "filter[event.imageUrl][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator infix"
                },
                {
                  "key": "filter[event.name][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator infix"
                },
                {
                  "key": "filter[event.imageUrl][in]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator in"
                },
                {
                  "key": "filter[event.name][in]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator in"
                },
                {
                  "key": "filter[event.imageUrl][not]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator not"
                },
                {
                  "key": "filter[event.name][not]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator not"
                },
                {
                  "key": "filter[event.imageUrl][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator prefix"
                },
                {
                  "key": "filter[event.name][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator prefix"
                },
                {
                  "key": "filter[event.imageUrl][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator gt"
                },
                {
                  "key": "filter[event.name][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator gt"
                },
                {
                  "key": "filter[event.imageUrl][le]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator le"
                },
                {
                  "key": "filter[event.name][le]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator le"
                },
                {
                  "key": "filter[event.imageUrl][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator notnull"
                },
                {
                  "key": "filter[event.name][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator notnull"
                },
                {
                  "key": "filter[event.imageUrl][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator postfix"
                },
                {
                  "key": "filter[event.name][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator postfix"
                },
                {
                  "key": "filter[event.imageUrl][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator ge"
                },
                {
                  "key": "filter[event.name][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator ge"
                },
                {
                  "key": "filter[event.imageUrl][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator isnull"
                },
                {
                  "key": "filter[event.name][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator isnull"
                },
                {
                  "key": "filter[event.imageUrl][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute imageUrl using the operator lt"
                },
                {
                  "key": "filter[event.name][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of event by the attribute name using the operator lt"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type event"
          },
          "response": [
            {
              "id": "f27bd958-9905-4e17-9435-5efbca52eceb",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/event?sort=<string>,<string>&fields[event]=<string>,<string>&include=<string>,<string>&filter[event]=<string>&filter=<string>&filter[event.imageUrl][infix]=<string>&filter[event.name][infix]=<string>&filter[event.imageUrl][in]=<string>&filter[event.name][in]=<string>&filter[event.imageUrl][not]=<string>&filter[event.name][not]=<string>&filter[event.imageUrl][prefix]=<string>&filter[event.name][prefix]=<string>&filter[event.imageUrl][gt]=<string>&filter[event.name][gt]=<string>&filter[event.imageUrl][le]=<string>&filter[event.name][le]=<string>&filter[event.imageUrl][notnull]=<string>&filter[event.name][notnull]=<string>&filter[event.imageUrl][postfix]=<string>&filter[event.name][postfix]=<string>&filter[event.imageUrl][ge]=<string>&filter[event.name][ge]=<string>&filter[event.imageUrl][isnull]=<string>&filter[event.name][isnull]=<string>&filter[event.imageUrl][lt]=<string>&filter[event.name][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "event"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[event]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[event]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.imageUrl][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[event.name][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"imageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"imageUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/event",
          "_postman_id": "a89e8d74-24ad-4af1-971b-9db8030ddfdc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"imageUrl\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/event",
            "description": "Creates an item of type event"
          },
          "response": [
            {
              "id": "bebbb809-5137-4ebf-8d83-c1abcd9a28a4",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/event"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"imageUrl\": \"<string>\",\n   \"name\": \"<string>\",\n   \"type\": \"<string>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
            }
          ]
        }
      ],
      "_postman_id": "ac69468a-2346-495b-9b62-6b34bfdb68a5",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ".///"
            ],
            "id": "7147dbbd-cd02-44af-b7ca-67a95d709ddd"
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ],
            "id": "5e30dec8-88f0-4e7d-b07a-3df72a306d10"
          }
        }
      ]
    },
    {
      "name": "player Division Info",
      "item": [
        {
          "name": "{player Division Info Id}",
          "item": [
            {
              "name": "player",
              "item": [
                {
                  "name": "{player Id}",
                  "item": [
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                      "_postman_id": "f6e63ad8-1b56-420b-a4d6-789b27fd71c9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "player",
                            ":playerId"
                          ],
                          "query": [
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of player fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "394c72a0-4252-4b7a-8bcd-8a981a2cc350",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "99f1351f-8ad4-4ac8-b9f6-b358691a79a8",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type player"
                      },
                      "response": [
                        {
                          "id": "0d3e63f9-fa07-4b3c-89d4-f356e40de3a8",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId?fields[player]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "player",
                                ":playerId"
                              ],
                              "query": [
                                {
                                  "key": "fields[player]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                      "_postman_id": "a5523ea9-8fbe-4cec-824b-9aa3fcce48c4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "83df0329-5e28-48b6-ae4e-6670aa1d4a05",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "8e12c66e-f121-4455-9613-e6eb5a7a1cc0",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type player"
                      },
                      "response": [
                        {
                          "id": "f62ef5e2-0667-45f4-95a2-8fa8c67672e6",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                      "_postman_id": "912556a3-6540-4f4d-a0c9-3e1fb9f5c3e5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "player",
                            ":playerId"
                          ],
                          "variable": [
                            {
                              "id": "29e730de-a22e-48d9-bd4c-950e3601470d",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "eab1d74a-d6fc-4610-9296-4d3c8e9f3c1f",
                              "key": "playerId",
                              "value": "<string>",
                              "description": "(Required) player Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type player"
                      },
                      "response": [
                        {
                          "id": "cd2d0c9a-c8ee-41b4-b75b-d77295488556",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player/:playerId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "player",
                                ":playerId"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "playerId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "f3fec2c7-029d-4bc1-99d2-fcfff7392604",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerDivisionInfo/:playerDivisionInfoId/player",
                  "_postman_id": "10a67825-dd3d-459a-b90a-8d654ee6a6eb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId",
                        "player"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[player]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of player fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[player]",
                          "value": "<string>",
                          "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[player.email][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator infix"
                        },
                        {
                          "key": "filter[player.login][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator infix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                        },
                        {
                          "key": "filter[player.steamId][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator infix"
                        },
                        {
                          "key": "filter[player.userAgent][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                        },
                        {
                          "key": "filter[player.email][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator in"
                        },
                        {
                          "key": "filter[player.login][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator in"
                        },
                        {
                          "key": "filter[player.recentIpAddress][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                        },
                        {
                          "key": "filter[player.steamId][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator in"
                        },
                        {
                          "key": "filter[player.userAgent][in]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator in"
                        },
                        {
                          "key": "filter[player.email][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator not"
                        },
                        {
                          "key": "filter[player.login][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator not"
                        },
                        {
                          "key": "filter[player.recentIpAddress][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                        },
                        {
                          "key": "filter[player.steamId][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator not"
                        },
                        {
                          "key": "filter[player.userAgent][not]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator not"
                        },
                        {
                          "key": "filter[player.email][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator prefix"
                        },
                        {
                          "key": "filter[player.login][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator prefix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                        },
                        {
                          "key": "filter[player.steamId][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                        },
                        {
                          "key": "filter[player.userAgent][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                        },
                        {
                          "key": "filter[player.email][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator gt"
                        },
                        {
                          "key": "filter[player.login][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator gt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                        },
                        {
                          "key": "filter[player.steamId][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator gt"
                        },
                        {
                          "key": "filter[player.userAgent][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                        },
                        {
                          "key": "filter[player.email][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator le"
                        },
                        {
                          "key": "filter[player.login][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator le"
                        },
                        {
                          "key": "filter[player.recentIpAddress][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                        },
                        {
                          "key": "filter[player.steamId][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator le"
                        },
                        {
                          "key": "filter[player.userAgent][le]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator le"
                        },
                        {
                          "key": "filter[player.email][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator notnull"
                        },
                        {
                          "key": "filter[player.login][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator notnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                        },
                        {
                          "key": "filter[player.steamId][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                        },
                        {
                          "key": "filter[player.userAgent][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                        },
                        {
                          "key": "filter[player.email][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator postfix"
                        },
                        {
                          "key": "filter[player.login][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator postfix"
                        },
                        {
                          "key": "filter[player.recentIpAddress][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                        },
                        {
                          "key": "filter[player.steamId][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                        },
                        {
                          "key": "filter[player.userAgent][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                        },
                        {
                          "key": "filter[player.email][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator ge"
                        },
                        {
                          "key": "filter[player.login][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator ge"
                        },
                        {
                          "key": "filter[player.recentIpAddress][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                        },
                        {
                          "key": "filter[player.steamId][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator ge"
                        },
                        {
                          "key": "filter[player.userAgent][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                        },
                        {
                          "key": "filter[player.email][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator isnull"
                        },
                        {
                          "key": "filter[player.login][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator isnull"
                        },
                        {
                          "key": "filter[player.recentIpAddress][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                        },
                        {
                          "key": "filter[player.steamId][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                        },
                        {
                          "key": "filter[player.userAgent][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                        },
                        {
                          "key": "filter[player.email][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute email using the operator lt"
                        },
                        {
                          "key": "filter[player.login][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute login using the operator lt"
                        },
                        {
                          "key": "filter[player.recentIpAddress][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                        },
                        {
                          "key": "filter[player.steamId][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute steamId using the operator lt"
                        },
                        {
                          "key": "filter[player.userAgent][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "4b3cb1d9-6030-4235-ae98-0302a84313f1",
                          "key": "playerDivisionInfoId",
                          "value": "<string>",
                          "description": "(Required) playerDivisionInfo Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship player"
                  },
                  "response": [
                    {
                      "id": "a8a6d9ff-1b9e-4c28-b84f-a49c9799af6a",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player?sort=<string>,<string>&fields[player]=<string>,<string>&include=<string>,<string>&filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[player]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[player]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerDivisionInfoId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"createTime\": \"<dateTime>\",\n    \"email\": \"<string>\",\n    \"lastLogin\": \"<dateTime>\",\n    \"login\": \"<string>\",\n    \"recentIpAddress\": \"<string>\",\n    \"steamId\": \"<string>\",\n    \"updateTime\": \"<dateTime>\",\n    \"userAgent\": \"<string>\"\n   },\n   \"relationships\": {\n    \"avatarAssignments\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"bans\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"clanMembership\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"globalRating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"ladder1v1Rating\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"names\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reportedOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"reporterOnModerationReports\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userGroups\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"userNotes\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerDivisionInfo/:playerDivisionInfoId/player",
                  "_postman_id": "eb24c649-6ff9-4b96-be04-81f8ed89e858",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"createTime\": \"<dateTime>\",\n            \"email\": \"<string>\",\n            \"lastLogin\": \"<dateTime>\",\n            \"login\": \"<string>\",\n            \"recentIpAddress\": \"<string>\",\n            \"steamId\": \"<string>\",\n            \"updateTime\": \"<dateTime>\",\n            \"userAgent\": \"<string>\"\n        },\n        \"relationships\": {\n            \"avatarAssignments\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"bans\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"clanMembership\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"globalRating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"ladder1v1Rating\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"names\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reportedOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"reporterOnModerationReports\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userGroups\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"userNotes\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId",
                        "player"
                      ],
                      "variable": [
                        {
                          "id": "e121bfbb-fc79-482f-b202-9fbcba8072f5",
                          "key": "playerDivisionInfoId",
                          "value": "<string>",
                          "description": "(Required) playerDivisionInfo Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type player and adds it to player"
                  },
                  "response": [
                    {
                      "id": "833b57eb-9ef5-43ac-aff3-3cb1ac184800",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "player"
                          ],
                          "variable": [
                            {
                              "key": "playerDivisionInfoId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"createTime\": \"<dateTime>\",\n   \"email\": \"<string>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"login\": \"<string>\",\n   \"recentIpAddress\": \"<string>\",\n   \"steamId\": \"<string>\",\n   \"updateTime\": \"<dateTime>\",\n   \"userAgent\": \"<string>\"\n  },\n  \"relationships\": {\n   \"avatarAssignments\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"bans\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"clanMembership\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"globalRating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"ladder1v1Rating\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"names\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reportedOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"reporterOnModerationReports\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userGroups\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"userNotes\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "f773d703-efdc-490d-8436-55b7d0e61483",
              "_postman_isSubFolder": true
            },
            {
              "name": "relationships",
              "item": [
                {
                  "name": "player",
                  "item": [
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/relationships/player",
                      "_postman_id": "48e0b94c-503c-4720-afc9-ce14bc0332d5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "relationships",
                            "player"
                          ],
                          "query": [
                            {
                              "key": "filter[player]",
                              "value": "<string>",
                              "description": "Filters the collection of player using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[player.email][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator infix"
                            },
                            {
                              "key": "filter[player.login][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator infix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator infix"
                            },
                            {
                              "key": "filter[player.steamId][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator infix"
                            },
                            {
                              "key": "filter[player.userAgent][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator infix"
                            },
                            {
                              "key": "filter[player.email][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator in"
                            },
                            {
                              "key": "filter[player.login][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator in"
                            },
                            {
                              "key": "filter[player.recentIpAddress][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator in"
                            },
                            {
                              "key": "filter[player.steamId][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator in"
                            },
                            {
                              "key": "filter[player.userAgent][in]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator in"
                            },
                            {
                              "key": "filter[player.email][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator not"
                            },
                            {
                              "key": "filter[player.login][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator not"
                            },
                            {
                              "key": "filter[player.recentIpAddress][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator not"
                            },
                            {
                              "key": "filter[player.steamId][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator not"
                            },
                            {
                              "key": "filter[player.userAgent][not]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator not"
                            },
                            {
                              "key": "filter[player.email][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator prefix"
                            },
                            {
                              "key": "filter[player.login][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator prefix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator prefix"
                            },
                            {
                              "key": "filter[player.steamId][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator prefix"
                            },
                            {
                              "key": "filter[player.userAgent][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator prefix"
                            },
                            {
                              "key": "filter[player.email][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator gt"
                            },
                            {
                              "key": "filter[player.login][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator gt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator gt"
                            },
                            {
                              "key": "filter[player.steamId][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator gt"
                            },
                            {
                              "key": "filter[player.userAgent][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator gt"
                            },
                            {
                              "key": "filter[player.email][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator le"
                            },
                            {
                              "key": "filter[player.login][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator le"
                            },
                            {
                              "key": "filter[player.recentIpAddress][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator le"
                            },
                            {
                              "key": "filter[player.steamId][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator le"
                            },
                            {
                              "key": "filter[player.userAgent][le]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator le"
                            },
                            {
                              "key": "filter[player.email][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator notnull"
                            },
                            {
                              "key": "filter[player.login][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator notnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator notnull"
                            },
                            {
                              "key": "filter[player.steamId][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator notnull"
                            },
                            {
                              "key": "filter[player.userAgent][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator notnull"
                            },
                            {
                              "key": "filter[player.email][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator postfix"
                            },
                            {
                              "key": "filter[player.login][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator postfix"
                            },
                            {
                              "key": "filter[player.recentIpAddress][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator postfix"
                            },
                            {
                              "key": "filter[player.steamId][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator postfix"
                            },
                            {
                              "key": "filter[player.userAgent][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator postfix"
                            },
                            {
                              "key": "filter[player.email][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator ge"
                            },
                            {
                              "key": "filter[player.login][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator ge"
                            },
                            {
                              "key": "filter[player.recentIpAddress][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator ge"
                            },
                            {
                              "key": "filter[player.steamId][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator ge"
                            },
                            {
                              "key": "filter[player.userAgent][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator ge"
                            },
                            {
                              "key": "filter[player.email][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator isnull"
                            },
                            {
                              "key": "filter[player.login][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator isnull"
                            },
                            {
                              "key": "filter[player.recentIpAddress][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator isnull"
                            },
                            {
                              "key": "filter[player.steamId][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator isnull"
                            },
                            {
                              "key": "filter[player.userAgent][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator isnull"
                            },
                            {
                              "key": "filter[player.email][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute email using the operator lt"
                            },
                            {
                              "key": "filter[player.login][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute login using the operator lt"
                            },
                            {
                              "key": "filter[player.recentIpAddress][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute recentIpAddress using the operator lt"
                            },
                            {
                              "key": "filter[player.steamId][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute steamId using the operator lt"
                            },
                            {
                              "key": "filter[player.userAgent][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of player by the attribute userAgent using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "cced163c-4164-4a7f-9fea-c1c1bbc7c1fa",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for player"
                      },
                      "response": [
                        {
                          "id": "a27660c0-2c65-441e-910a-5d1dfae805b2",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/player?filter[player]=<string>&filter[player.email][infix]=<string>&filter[player.login][infix]=<string>&filter[player.recentIpAddress][infix]=<string>&filter[player.steamId][infix]=<string>&filter[player.userAgent][infix]=<string>&filter[player.email][in]=<string>&filter[player.login][in]=<string>&filter[player.recentIpAddress][in]=<string>&filter[player.steamId][in]=<string>&filter[player.userAgent][in]=<string>&filter[player.email][not]=<string>&filter[player.login][not]=<string>&filter[player.recentIpAddress][not]=<string>&filter[player.steamId][not]=<string>&filter[player.userAgent][not]=<string>&filter[player.email][prefix]=<string>&filter[player.login][prefix]=<string>&filter[player.recentIpAddress][prefix]=<string>&filter[player.steamId][prefix]=<string>&filter[player.userAgent][prefix]=<string>&filter[player.email][gt]=<string>&filter[player.login][gt]=<string>&filter[player.recentIpAddress][gt]=<string>&filter[player.steamId][gt]=<string>&filter[player.userAgent][gt]=<string>&filter[player.email][le]=<string>&filter[player.login][le]=<string>&filter[player.recentIpAddress][le]=<string>&filter[player.steamId][le]=<string>&filter[player.userAgent][le]=<string>&filter[player.email][notnull]=<string>&filter[player.login][notnull]=<string>&filter[player.recentIpAddress][notnull]=<string>&filter[player.steamId][notnull]=<string>&filter[player.userAgent][notnull]=<string>&filter[player.email][postfix]=<string>&filter[player.login][postfix]=<string>&filter[player.recentIpAddress][postfix]=<string>&filter[player.steamId][postfix]=<string>&filter[player.userAgent][postfix]=<string>&filter[player.email][ge]=<string>&filter[player.login][ge]=<string>&filter[player.recentIpAddress][ge]=<string>&filter[player.steamId][ge]=<string>&filter[player.userAgent][ge]=<string>&filter[player.email][isnull]=<string>&filter[player.login][isnull]=<string>&filter[player.recentIpAddress][isnull]=<string>&filter[player.steamId][isnull]=<string>&filter[player.userAgent][isnull]=<string>&filter[player.email][lt]=<string>&filter[player.login][lt]=<string>&filter[player.recentIpAddress][lt]=<string>&filter[player.steamId][lt]=<string>&filter[player.userAgent][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "relationships",
                                "player"
                              ],
                              "query": [
                                {
                                  "key": "filter[player]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.email][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.login][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.recentIpAddress][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.steamId][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[player.userAgent][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/relationships/player",
                      "_postman_id": "e01ca651-3c2c-4e9e-9424-40cbd9f27793",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/player",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "relationships",
                            "player"
                          ],
                          "variable": [
                            {
                              "id": "cbe7981e-d933-4a6c-8723-fa5bfb2dcf50",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship player"
                      },
                      "response": [
                        {
                          "id": "82a07461-c7cf-4a9c-8188-f7b1e902900c",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/player",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "relationships",
                                "player"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "011ee021-c373-42a9-b66a-c0836a5b95be",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "division",
                  "item": [
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/relationships/division",
                      "_postman_id": "e2d98ced-d143-4bba-809c-f1e813941f61",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/division?filter[division]=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "relationships",
                            "division"
                          ],
                          "query": [
                            {
                              "key": "filter[division]",
                              "value": "<string>",
                              "description": "Filters the collection of division using a 'disjoint' RSQL expression"
                            },
                            {
                              "key": "filter[division.league][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator infix"
                            },
                            {
                              "key": "filter[division.name][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator infix"
                            },
                            {
                              "key": "filter[division.threshold][infix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator infix"
                            },
                            {
                              "key": "filter[division.league][in]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator in"
                            },
                            {
                              "key": "filter[division.name][in]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator in"
                            },
                            {
                              "key": "filter[division.threshold][in]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator in"
                            },
                            {
                              "key": "filter[division.league][not]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator not"
                            },
                            {
                              "key": "filter[division.name][not]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator not"
                            },
                            {
                              "key": "filter[division.threshold][not]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator not"
                            },
                            {
                              "key": "filter[division.league][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator prefix"
                            },
                            {
                              "key": "filter[division.name][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator prefix"
                            },
                            {
                              "key": "filter[division.threshold][prefix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator prefix"
                            },
                            {
                              "key": "filter[division.league][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator gt"
                            },
                            {
                              "key": "filter[division.name][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator gt"
                            },
                            {
                              "key": "filter[division.threshold][gt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator gt"
                            },
                            {
                              "key": "filter[division.league][le]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator le"
                            },
                            {
                              "key": "filter[division.name][le]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator le"
                            },
                            {
                              "key": "filter[division.threshold][le]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator le"
                            },
                            {
                              "key": "filter[division.league][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator notnull"
                            },
                            {
                              "key": "filter[division.name][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator notnull"
                            },
                            {
                              "key": "filter[division.threshold][notnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator notnull"
                            },
                            {
                              "key": "filter[division.league][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator postfix"
                            },
                            {
                              "key": "filter[division.name][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator postfix"
                            },
                            {
                              "key": "filter[division.threshold][postfix]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator postfix"
                            },
                            {
                              "key": "filter[division.league][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator ge"
                            },
                            {
                              "key": "filter[division.name][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator ge"
                            },
                            {
                              "key": "filter[division.threshold][ge]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator ge"
                            },
                            {
                              "key": "filter[division.league][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator isnull"
                            },
                            {
                              "key": "filter[division.name][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator isnull"
                            },
                            {
                              "key": "filter[division.threshold][isnull]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator isnull"
                            },
                            {
                              "key": "filter[division.league][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute league using the operator lt"
                            },
                            {
                              "key": "filter[division.name][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute name using the operator lt"
                            },
                            {
                              "key": "filter[division.threshold][lt]",
                              "value": "<string>",
                              "description": "Filters the collection of division by the attribute threshold using the operator lt"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>",
                              "description": "Number of pages to return.  Can be used with page[size]"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>",
                              "description": "Number of elements per page.  Can be used with page[number]"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>",
                              "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>",
                              "description": "Maximum number of items to return.  Can be used with page[offset]"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>",
                              "description": "For requesting total pages/records be included in the response page meta data"
                            }
                          ],
                          "variable": [
                            {
                              "id": "4e36775a-7f0f-4ff1-b795-bc94c248dcdc",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns the relationship identifiers for division"
                      },
                      "response": [
                        {
                          "id": "41c2fe0f-0e42-462d-bd64-a68013635cfe",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/division?filter[division]=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "relationships",
                                "division"
                              ],
                              "query": [
                                {
                                  "key": "filter[division]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][infix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][in]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][not]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][prefix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][gt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][le]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][notnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][postfix]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][ge]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][isnull]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.league][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.name][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "filter[division.threshold][lt]",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page[number]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[size]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[offset]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[limit]",
                                  "value": "<integer>"
                                },
                                {
                                  "key": "page[totals]",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"type\": \"<string>\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/relationships/division",
                      "_postman_id": "22df41ab-4516-445c-9c56-77f3d63f6ab4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/division",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "relationships",
                            "division"
                          ],
                          "variable": [
                            {
                              "id": "32563a7f-7889-45cb-a34b-7b7d16068c38",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Replaces the relationship division"
                      },
                      "response": [
                        {
                          "id": "7d19937d-5c24-4965-bd4a-e8695b749288",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/relationships/division",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "relationships",
                                "division"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "13198de9-60c7-4862-877b-50e9f660f73e",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "0aa34434-87d9-4a07-8749-c0c51ec77476",
              "_postman_isSubFolder": true
            },
            {
              "name": "division",
              "item": [
                {
                  "name": "{division Id}",
                  "item": [
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                      "_postman_id": "57984f75-1690-4a16-9ea1-e67298a4fc6b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId?fields[division]=<string>,<string>&include=<string>,<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "division",
                            ":divisionId"
                          ],
                          "query": [
                            {
                              "key": "fields[division]",
                              "value": "<string>,<string>",
                              "description": "Selects the set of division fields that should be returned in the result."
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>",
                              "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                            }
                          ],
                          "variable": [
                            {
                              "id": "072e8896-75ef-4e40-92c2-2610193ad881",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "2d65f718-88cf-4468-b1c9-d8cdd74a92db",
                              "key": "divisionId",
                              "value": "<string>",
                              "description": "(Required) division Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Returns an instance of type division"
                      },
                      "response": [
                        {
                          "id": "b42bc6e3-df5f-46af-81be-f245f823e3fd",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId?fields[division]=<string>,<string>&include=<string>,<string>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "division",
                                ":divisionId"
                              ],
                              "query": [
                                {
                                  "key": "fields[division]",
                                  "value": "<string>,<string>"
                                },
                                {
                                  "key": "include",
                                  "value": "<string>,<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "divisionId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/vnd.api+json"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"league\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"threshold\": \"<integer>\"\n  },\n  \"relationships\": \"<object>\"\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                      "_postman_id": "2e7255dd-9f88-4178-8e34-a11fb0f91e6f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "division",
                            ":divisionId"
                          ],
                          "variable": [
                            {
                              "id": "ac2edb42-ded5-4452-94a6-e2fd4d28e89a",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "2c9d28ec-fd21-4047-b5c3-16c388902614",
                              "key": "divisionId",
                              "value": "<string>",
                              "description": "(Required) division Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Deletes an instance of type division"
                      },
                      "response": [
                        {
                          "id": "0062723d-a7bd-4c49-82be-bd25048e0d5b",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "division",
                                ":divisionId"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "divisionId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                      "_postman_id": "e0b6568b-35a0-4c3e-947b-16991113aa0d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/vnd.api+json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"league\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"threshold\": \"<integer>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "division",
                            ":divisionId"
                          ],
                          "variable": [
                            {
                              "id": "2896eb17-c495-4aff-aa2d-4b387f233644",
                              "key": "playerDivisionInfoId",
                              "value": "<string>",
                              "description": "(Required) playerDivisionInfo Identifier",
                              "type": "string"
                            },
                            {
                              "id": "cf80d339-213a-4245-826c-e0c50844f396",
                              "key": "divisionId",
                              "value": "<string>",
                              "description": "(Required) division Identifier",
                              "type": "string"
                            }
                          ]
                        },
                        "description": "Modifies an instance of type division"
                      },
                      "response": [
                        {
                          "id": "1394a839-731a-47d9-93ef-c50d52d58544",
                          "name": "Successful response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division/:divisionId",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "playerDivisionInfo",
                                ":playerDivisionInfoId",
                                "division",
                                ":divisionId"
                              ],
                              "variable": [
                                {
                                  "key": "playerDivisionInfoId"
                                },
                                {
                                  "key": "divisionId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_id": "84bfe9d9-7aa8-411d-b668-48ea1679b493",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "/playerDivisionInfo/:playerDivisionInfoId/division",
                  "_postman_id": "4fcfbde9-fe04-4efb-8ec4-9603ba4b85a7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division?sort=<string>,<string>&fields[division]=<string>,<string>&include=<string>,<string>&filter[division]=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId",
                        "division"
                      ],
                      "query": [
                        {
                          "key": "sort",
                          "value": "<string>,<string>",
                          "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                        },
                        {
                          "key": "fields[division]",
                          "value": "<string>,<string>",
                          "description": "Selects the set of division fields that should be returned in the result."
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>",
                          "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                        },
                        {
                          "key": "filter[division]",
                          "value": "<string>",
                          "description": "Filters the collection of division using a 'disjoint' RSQL expression"
                        },
                        {
                          "key": "filter[division.league][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator infix"
                        },
                        {
                          "key": "filter[division.name][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator infix"
                        },
                        {
                          "key": "filter[division.threshold][infix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator infix"
                        },
                        {
                          "key": "filter[division.league][in]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator in"
                        },
                        {
                          "key": "filter[division.name][in]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator in"
                        },
                        {
                          "key": "filter[division.threshold][in]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator in"
                        },
                        {
                          "key": "filter[division.league][not]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator not"
                        },
                        {
                          "key": "filter[division.name][not]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator not"
                        },
                        {
                          "key": "filter[division.threshold][not]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator not"
                        },
                        {
                          "key": "filter[division.league][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator prefix"
                        },
                        {
                          "key": "filter[division.name][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator prefix"
                        },
                        {
                          "key": "filter[division.threshold][prefix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator prefix"
                        },
                        {
                          "key": "filter[division.league][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator gt"
                        },
                        {
                          "key": "filter[division.name][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator gt"
                        },
                        {
                          "key": "filter[division.threshold][gt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator gt"
                        },
                        {
                          "key": "filter[division.league][le]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator le"
                        },
                        {
                          "key": "filter[division.name][le]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator le"
                        },
                        {
                          "key": "filter[division.threshold][le]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator le"
                        },
                        {
                          "key": "filter[division.league][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator notnull"
                        },
                        {
                          "key": "filter[division.name][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator notnull"
                        },
                        {
                          "key": "filter[division.threshold][notnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator notnull"
                        },
                        {
                          "key": "filter[division.league][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator postfix"
                        },
                        {
                          "key": "filter[division.name][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator postfix"
                        },
                        {
                          "key": "filter[division.threshold][postfix]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator postfix"
                        },
                        {
                          "key": "filter[division.league][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator ge"
                        },
                        {
                          "key": "filter[division.name][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator ge"
                        },
                        {
                          "key": "filter[division.threshold][ge]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator ge"
                        },
                        {
                          "key": "filter[division.league][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator isnull"
                        },
                        {
                          "key": "filter[division.name][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator isnull"
                        },
                        {
                          "key": "filter[division.threshold][isnull]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator isnull"
                        },
                        {
                          "key": "filter[division.league][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute league using the operator lt"
                        },
                        {
                          "key": "filter[division.name][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute name using the operator lt"
                        },
                        {
                          "key": "filter[division.threshold][lt]",
                          "value": "<string>",
                          "description": "Filters the collection of division by the attribute threshold using the operator lt"
                        },
                        {
                          "key": "page[number]",
                          "value": "<integer>",
                          "description": "Number of pages to return.  Can be used with page[size]"
                        },
                        {
                          "key": "page[size]",
                          "value": "<integer>",
                          "description": "Number of elements per page.  Can be used with page[number]"
                        },
                        {
                          "key": "page[offset]",
                          "value": "<integer>",
                          "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                        },
                        {
                          "key": "page[limit]",
                          "value": "<integer>",
                          "description": "Maximum number of items to return.  Can be used with page[offset]"
                        },
                        {
                          "key": "page[totals]",
                          "value": "<string>",
                          "description": "For requesting total pages/records be included in the response page meta data"
                        }
                      ],
                      "variable": [
                        {
                          "id": "a56a8952-4a18-4b1a-8b86-35332010f996",
                          "key": "playerDivisionInfoId",
                          "value": "<string>",
                          "description": "(Required) playerDivisionInfo Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Returns the relationship division"
                  },
                  "response": [
                    {
                      "id": "7effe010-7f21-4a86-ac19-9996f24d943f",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division?sort=<string>,<string>&fields[division]=<string>,<string>&include=<string>,<string>&filter[division]=<string>&filter[division.league][infix]=<string>&filter[division.name][infix]=<string>&filter[division.threshold][infix]=<string>&filter[division.league][in]=<string>&filter[division.name][in]=<string>&filter[division.threshold][in]=<string>&filter[division.league][not]=<string>&filter[division.name][not]=<string>&filter[division.threshold][not]=<string>&filter[division.league][prefix]=<string>&filter[division.name][prefix]=<string>&filter[division.threshold][prefix]=<string>&filter[division.league][gt]=<string>&filter[division.name][gt]=<string>&filter[division.threshold][gt]=<string>&filter[division.league][le]=<string>&filter[division.name][le]=<string>&filter[division.threshold][le]=<string>&filter[division.league][notnull]=<string>&filter[division.name][notnull]=<string>&filter[division.threshold][notnull]=<string>&filter[division.league][postfix]=<string>&filter[division.name][postfix]=<string>&filter[division.threshold][postfix]=<string>&filter[division.league][ge]=<string>&filter[division.name][ge]=<string>&filter[division.threshold][ge]=<string>&filter[division.league][isnull]=<string>&filter[division.name][isnull]=<string>&filter[division.threshold][isnull]=<string>&filter[division.league][lt]=<string>&filter[division.name][lt]=<string>&filter[division.threshold][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "division"
                          ],
                          "query": [
                            {
                              "key": "sort",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "fields[division]",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "include",
                              "value": "<string>,<string>"
                            },
                            {
                              "key": "filter[division]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][infix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][in]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][not]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][prefix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][gt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][le]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][notnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][postfix]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][ge]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][isnull]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.league][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.name][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "filter[division.threshold][lt]",
                              "value": "<string>"
                            },
                            {
                              "key": "page[number]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[size]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[offset]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[limit]",
                              "value": "<integer>"
                            },
                            {
                              "key": "page[totals]",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "playerDivisionInfoId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"league\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threshold\": \"<integer>\"\n   },\n   \"relationships\": \"<object>\"\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"league\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threshold\": \"<integer>\"\n   },\n   \"relationships\": \"<object>\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "/playerDivisionInfo/:playerDivisionInfoId/division",
                  "_postman_id": "1df739cc-9dd3-4e17-b5b6-e7db9b529feb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/vnd.api+json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"league\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"threshold\": \"<integer>\"\n        },\n        \"relationships\": \"<object>\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId",
                        "division"
                      ],
                      "variable": [
                        {
                          "id": "708a8007-9e6f-4720-b35e-e24e5801c74b",
                          "key": "playerDivisionInfoId",
                          "value": "<string>",
                          "description": "(Required) playerDivisionInfo Identifier",
                          "type": "string"
                        }
                      ]
                    },
                    "description": "Creates an item of type division and adds it to division"
                  },
                  "response": [
                    {
                      "id": "a3edf895-6f74-4830-91b9-737657932f6b",
                      "name": "Successful response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId/division",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "playerDivisionInfo",
                            ":playerDivisionInfoId",
                            "division"
                          ],
                          "variable": [
                            {
                              "key": "playerDivisionInfoId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/vnd.api+json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"league\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"threshold\": \"<integer>\"\n  },\n  \"relationships\": \"<object>\"\n }\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "3dbc7818-989a-4c8f-9d7c-ac955467fab5",
              "_postman_isSubFolder": true
            },
            {
              "name": "/playerDivisionInfo/:playerDivisionInfoId",
              "_postman_id": "cace7e5d-6452-4494-bbed-151ea45a29e3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId?fields[playerDivisionInfo]=<string>,<string>&include=<string>,<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerDivisionInfo",
                    ":playerDivisionInfoId"
                  ],
                  "query": [
                    {
                      "key": "fields[playerDivisionInfo]",
                      "value": "<string>,<string>",
                      "description": "Selects the set of playerDivisionInfo fields that should be returned in the result."
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>",
                      "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                    }
                  ],
                  "variable": [
                    {
                      "id": "9b701de7-166f-4226-81ac-f77cc07f2da3",
                      "key": "playerDivisionInfoId",
                      "value": "<string>",
                      "description": "(Required) playerDivisionInfo Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Returns an instance of type playerDivisionInfo"
              },
              "response": [
                {
                  "id": "d91186e7-dd30-4fcd-9187-a3da725b2ea8",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId?fields[playerDivisionInfo]=<string>,<string>&include=<string>,<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId"
                      ],
                      "query": [
                        {
                          "key": "fields[playerDivisionInfo]",
                          "value": "<string>,<string>"
                        },
                        {
                          "key": "include",
                          "value": "<string>,<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "playerDivisionInfoId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.api+json"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"games\": \"<integer>\",\n   \"league\": \"<integer>\",\n   \"score\": \"<float>\",\n   \"season\": \"<integer>\"\n  },\n  \"relationships\": {\n   \"division\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "/playerDivisionInfo/:playerDivisionInfoId",
              "_postman_id": "488d5416-3cfe-41c6-8a9c-aae5c85d3f44",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerDivisionInfo",
                    ":playerDivisionInfoId"
                  ],
                  "variable": [
                    {
                      "id": "ef2c8d73-c296-4c26-abd4-afea3f87eba0",
                      "key": "playerDivisionInfoId",
                      "value": "<string>",
                      "description": "(Required) playerDivisionInfo Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Deletes an instance of type playerDivisionInfo"
              },
              "response": [
                {
                  "id": "afc1c3b4-c958-4d7f-88e2-e07aed0666b3",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId"
                      ],
                      "variable": [
                        {
                          "key": "playerDivisionInfoId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            },
            {
              "name": "/playerDivisionInfo/:playerDivisionInfoId",
              "_postman_id": "c29df1f1-0c08-4a31-8f36-ab75628ddf46",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/vnd.api+json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"games\": \"<integer>\",\n            \"league\": \"<integer>\",\n            \"score\": \"<float>\",\n            \"season\": \"<integer>\"\n        },\n        \"relationships\": {\n            \"division\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerDivisionInfo",
                    ":playerDivisionInfoId"
                  ],
                  "variable": [
                    {
                      "id": "aad1836f-94d3-4651-8f8c-65de4c4f07be",
                      "key": "playerDivisionInfoId",
                      "value": "<string>",
                      "description": "(Required) playerDivisionInfo Identifier",
                      "type": "string"
                    }
                  ]
                },
                "description": "Modifies an instance of type playerDivisionInfo"
              },
              "response": [
                {
                  "id": "754e5cf2-70b1-4c0c-9e9a-3f427ca19d33",
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/playerDivisionInfo/:playerDivisionInfoId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "playerDivisionInfo",
                        ":playerDivisionInfoId"
                      ],
                      "variable": [
                        {
                          "key": "playerDivisionInfoId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_id": "fe00615d-7313-4615-b2cd-a7255eb62d43",
          "_postman_isSubFolder": true
        },
        {
          "name": "/playerDivisionInfo",
          "_postman_id": "13950f53-3be5-48f1-8573-26791d77300b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/playerDivisionInfo?sort=<string>,<string>&fields[playerDivisionInfo]=<string>,<string>&include=<string>,<string>&filter[playerDivisionInfo]=<string>&filter=<string>&filter[playerDivisionInfo.games][infix]=<string>&filter[playerDivisionInfo.league][infix]=<string>&filter[playerDivisionInfo.score][infix]=<string>&filter[playerDivisionInfo.season][infix]=<string>&filter[playerDivisionInfo.games][in]=<string>&filter[playerDivisionInfo.league][in]=<string>&filter[playerDivisionInfo.score][in]=<string>&filter[playerDivisionInfo.season][in]=<string>&filter[playerDivisionInfo.games][not]=<string>&filter[playerDivisionInfo.league][not]=<string>&filter[playerDivisionInfo.score][not]=<string>&filter[playerDivisionInfo.season][not]=<string>&filter[playerDivisionInfo.games][prefix]=<string>&filter[playerDivisionInfo.league][prefix]=<string>&filter[playerDivisionInfo.score][prefix]=<string>&filter[playerDivisionInfo.season][prefix]=<string>&filter[playerDivisionInfo.games][gt]=<string>&filter[playerDivisionInfo.league][gt]=<string>&filter[playerDivisionInfo.score][gt]=<string>&filter[playerDivisionInfo.season][gt]=<string>&filter[playerDivisionInfo.games][le]=<string>&filter[playerDivisionInfo.league][le]=<string>&filter[playerDivisionInfo.score][le]=<string>&filter[playerDivisionInfo.season][le]=<string>&filter[playerDivisionInfo.games][notnull]=<string>&filter[playerDivisionInfo.league][notnull]=<string>&filter[playerDivisionInfo.score][notnull]=<string>&filter[playerDivisionInfo.season][notnull]=<string>&filter[playerDivisionInfo.games][postfix]=<string>&filter[playerDivisionInfo.league][postfix]=<string>&filter[playerDivisionInfo.score][postfix]=<string>&filter[playerDivisionInfo.season][postfix]=<string>&filter[playerDivisionInfo.games][ge]=<string>&filter[playerDivisionInfo.league][ge]=<string>&filter[playerDivisionInfo.score][ge]=<string>&filter[playerDivisionInfo.season][ge]=<string>&filter[playerDivisionInfo.games][isnull]=<string>&filter[playerDivisionInfo.league][isnull]=<string>&filter[playerDivisionInfo.score][isnull]=<string>&filter[playerDivisionInfo.season][isnull]=<string>&filter[playerDivisionInfo.games][lt]=<string>&filter[playerDivisionInfo.league][lt]=<string>&filter[playerDivisionInfo.score][lt]=<string>&filter[playerDivisionInfo.season][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "playerDivisionInfo"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "<string>,<string>",
                  "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending"
                },
                {
                  "key": "fields[playerDivisionInfo]",
                  "value": "<string>,<string>",
                  "description": "Selects the set of playerDivisionInfo fields that should be returned in the result."
                },
                {
                  "key": "include",
                  "value": "<string>,<string>",
                  "description": "Selects the set of relationships that should be expanded as a compound document in the result."
                },
                {
                  "key": "filter[playerDivisionInfo]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo using a 'disjoint' RSQL expression"
                },
                {
                  "key": "filter",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo using a 'joined' RSQL expression"
                },
                {
                  "key": "filter[playerDivisionInfo.games][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator infix"
                },
                {
                  "key": "filter[playerDivisionInfo.league][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator infix"
                },
                {
                  "key": "filter[playerDivisionInfo.score][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator infix"
                },
                {
                  "key": "filter[playerDivisionInfo.season][infix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator infix"
                },
                {
                  "key": "filter[playerDivisionInfo.games][in]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator in"
                },
                {
                  "key": "filter[playerDivisionInfo.league][in]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator in"
                },
                {
                  "key": "filter[playerDivisionInfo.score][in]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator in"
                },
                {
                  "key": "filter[playerDivisionInfo.season][in]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator in"
                },
                {
                  "key": "filter[playerDivisionInfo.games][not]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator not"
                },
                {
                  "key": "filter[playerDivisionInfo.league][not]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator not"
                },
                {
                  "key": "filter[playerDivisionInfo.score][not]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator not"
                },
                {
                  "key": "filter[playerDivisionInfo.season][not]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator not"
                },
                {
                  "key": "filter[playerDivisionInfo.games][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator prefix"
                },
                {
                  "key": "filter[playerDivisionInfo.league][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator prefix"
                },
                {
                  "key": "filter[playerDivisionInfo.score][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator prefix"
                },
                {
                  "key": "filter[playerDivisionInfo.season][prefix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator prefix"
                },
                {
                  "key": "filter[playerDivisionInfo.games][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator gt"
                },
                {
                  "key": "filter[playerDivisionInfo.league][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator gt"
                },
                {
                  "key": "filter[playerDivisionInfo.score][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator gt"
                },
                {
                  "key": "filter[playerDivisionInfo.season][gt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator gt"
                },
                {
                  "key": "filter[playerDivisionInfo.games][le]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator le"
                },
                {
                  "key": "filter[playerDivisionInfo.league][le]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator le"
                },
                {
                  "key": "filter[playerDivisionInfo.score][le]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator le"
                },
                {
                  "key": "filter[playerDivisionInfo.season][le]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator le"
                },
                {
                  "key": "filter[playerDivisionInfo.games][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator notnull"
                },
                {
                  "key": "filter[playerDivisionInfo.league][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator notnull"
                },
                {
                  "key": "filter[playerDivisionInfo.score][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator notnull"
                },
                {
                  "key": "filter[playerDivisionInfo.season][notnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator notnull"
                },
                {
                  "key": "filter[playerDivisionInfo.games][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator postfix"
                },
                {
                  "key": "filter[playerDivisionInfo.league][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator postfix"
                },
                {
                  "key": "filter[playerDivisionInfo.score][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator postfix"
                },
                {
                  "key": "filter[playerDivisionInfo.season][postfix]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator postfix"
                },
                {
                  "key": "filter[playerDivisionInfo.games][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator ge"
                },
                {
                  "key": "filter[playerDivisionInfo.league][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator ge"
                },
                {
                  "key": "filter[playerDivisionInfo.score][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator ge"
                },
                {
                  "key": "filter[playerDivisionInfo.season][ge]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator ge"
                },
                {
                  "key": "filter[playerDivisionInfo.games][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator isnull"
                },
                {
                  "key": "filter[playerDivisionInfo.league][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator isnull"
                },
                {
                  "key": "filter[playerDivisionInfo.score][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator isnull"
                },
                {
                  "key": "filter[playerDivisionInfo.season][isnull]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator isnull"
                },
                {
                  "key": "filter[playerDivisionInfo.games][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute games using the operator lt"
                },
                {
                  "key": "filter[playerDivisionInfo.league][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute league using the operator lt"
                },
                {
                  "key": "filter[playerDivisionInfo.score][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute score using the operator lt"
                },
                {
                  "key": "filter[playerDivisionInfo.season][lt]",
                  "value": "<string>",
                  "description": "Filters the collection of playerDivisionInfo by the attribute season using the operator lt"
                },
                {
                  "key": "page[number]",
                  "value": "<integer>",
                  "description": "Number of pages to return.  Can be used with page[size]"
                },
                {
                  "key": "page[size]",
                  "value": "<integer>",
                  "description": "Number of elements per page.  Can be used with page[number]"
                },
                {
                  "key": "page[offset]",
                  "value": "<integer>",
                  "description": "Offset from 0 to start paginating.  Can be used with page[limit]"
                },
                {
                  "key": "page[limit]",
                  "value": "<integer>",
                  "description": "Maximum number of items to return.  Can be used with page[offset]"
                },
                {
                  "key": "page[totals]",
                  "value": "<string>",
                  "description": "For requesting total pages/records be included in the response page meta data"
                }
              ]
            },
            "description": "Returns the collection of type playerDivisionInfo"
          },
          "response": [
            {
              "id": "564b1f49-e223-4af9-b202-5df5700251d6",
              "name": "Successful response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/playerDivisionInfo?sort=<string>,<string>&fields[playerDivisionInfo]=<string>,<string>&include=<string>,<string>&filter[playerDivisionInfo]=<string>&filter=<string>&filter[playerDivisionInfo.games][infix]=<string>&filter[playerDivisionInfo.league][infix]=<string>&filter[playerDivisionInfo.score][infix]=<string>&filter[playerDivisionInfo.season][infix]=<string>&filter[playerDivisionInfo.games][in]=<string>&filter[playerDivisionInfo.league][in]=<string>&filter[playerDivisionInfo.score][in]=<string>&filter[playerDivisionInfo.season][in]=<string>&filter[playerDivisionInfo.games][not]=<string>&filter[playerDivisionInfo.league][not]=<string>&filter[playerDivisionInfo.score][not]=<string>&filter[playerDivisionInfo.season][not]=<string>&filter[playerDivisionInfo.games][prefix]=<string>&filter[playerDivisionInfo.league][prefix]=<string>&filter[playerDivisionInfo.score][prefix]=<string>&filter[playerDivisionInfo.season][prefix]=<string>&filter[playerDivisionInfo.games][gt]=<string>&filter[playerDivisionInfo.league][gt]=<string>&filter[playerDivisionInfo.score][gt]=<string>&filter[playerDivisionInfo.season][gt]=<string>&filter[playerDivisionInfo.games][le]=<string>&filter[playerDivisionInfo.league][le]=<string>&filter[playerDivisionInfo.score][le]=<string>&filter[playerDivisionInfo.season][le]=<string>&filter[playerDivisionInfo.games][notnull]=<string>&filter[playerDivisionInfo.league][notnull]=<string>&filter[playerDivisionInfo.score][notnull]=<string>&filter[playerDivisionInfo.season][notnull]=<string>&filter[playerDivisionInfo.games][postfix]=<string>&filter[playerDivisionInfo.league][postfix]=<string>&filter[playerDivisionInfo.score][postfix]=<string>&filter[playerDivisionInfo.season][postfix]=<string>&filter[playerDivisionInfo.games][ge]=<string>&filter[playerDivisionInfo.league][ge]=<string>&filter[playerDivisionInfo.score][ge]=<string>&filter[playerDivisionInfo.season][ge]=<string>&filter[playerDivisionInfo.games][isnull]=<string>&filter[playerDivisionInfo.league][isnull]=<string>&filter[playerDivisionInfo.score][isnull]=<string>&filter[playerDivisionInfo.season][isnull]=<string>&filter[playerDivisionInfo.games][lt]=<string>&filter[playerDivisionInfo.league][lt]=<string>&filter[playerDivisionInfo.score][lt]=<string>&filter[playerDivisionInfo.season][lt]=<string>&page[number]=<integer>&page[size]=<integer>&page[offset]=<integer>&page[limit]=<integer>&page[totals]=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "playerDivisionInfo"
                  ],
                  "query": [
                    {
                      "key": "sort",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "fields[playerDivisionInfo]",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "include",
                      "value": "<string>,<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][infix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][in]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][not]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][prefix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][gt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][le]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][notnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][postfix]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][ge]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][isnull]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.games][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.league][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.score][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "filter[playerDivisionInfo.season][lt]",
                      "value": "<string>"
                    },
                    {
                      "key": "page[number]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[size]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[offset]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[limit]",
                      "value": "<integer>"
                    },
                    {
                      "key": "page[totals]",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": [\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"games\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"score\": \"<float>\",\n    \"season\": \"<integer>\"\n   },\n   \"relationships\": {\n    \"division\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  },\n  {\n   \"type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"attributes\": {\n    \"games\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"score\": \"<float>\",\n    \"season\": \"<integer>\"\n   },\n   \"relationships\": {\n    \"division\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    },\n    \"player\": {\n     \"id\": \"<string>\",\n     \"type\": \"<string>\"\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": \"<object>\",\n   \"id\": \"<string>\",\n   \"relationships\": \"<object>\",\n   \"type\": \"<string>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "/playerDivisionInfo",
          "_postman_id": "8a0c8946-63da-409d-9e4b-b12edf728fde",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"attributes\": {\n            \"games\": \"<integer>\",\n            \"league\": \"<integer>\",\n            \"score\": \"<float>\",\n            \"season\": \"<integer>\"\n        },\n        \"relationships\": {\n            \"division\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"player\": {\n                \"id\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {}
              }
            },
            "url": "{{baseUrl}}/playerDivisionInfo",
            "description": "Creates an item of type playerDivisionInfo"
          },
          "response": [
            {
              "id": "f0a712a3-5e74-4484-96a3-1f5ea21b9bf5",
              "name": "Successful response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": "{{baseUrl}}/playerDivisionInfo"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/vnd.api+json"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n \"data\": {\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"attributes\": {\n   \"games\": \"<integer>\",\n   \"league\": \"<integer>\",\n   \"score\": \"<float>\",\n   \"season\": \"<integer>\"\n  },\n  \"relationships\": {\n   \"division\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   },\n   \"player\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n   }\n  }\n }\n}"
            }
          ]
        }
      ],
      "_postman_id": "5f06957c-d238-46e8-975c-16ba7a47b9fc"
    },
    {
      "name": "New Folder",
      "item": [
        {
          "name": "New Request",
          "_postman_id": "cc1df4c8-1e5d-4029-844e-735f07f7ab82",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": ""
          },
          "response": []
        }
      ],
      "_postman_id": "c582ae95-aaba-4273-be80-4784f1cc79e5"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": {
      "value": "adsada",
      "key": "sdasd"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "f062eafb-395c-4283-a809-e06574e9444a",
        "type": "text/javascript",
        "exec": [
          "///aa",
          "///aa",
          "///aa"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "c831b45f-90b1-4dab-9f60-d6f1d2f6e214",
        "type": "text/javascript",
        "exec": [
          "// new "
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "a514a60f-5a13-484e-88ea-cbc814c0e643",
      "key": "baseUrl",
      "value": "/data",
      "type": "string"
    }
  ]
}